// Dependencies are loaded via <script> tags in index.html, creating global variables (React, ReactDOM, htm).
const html = htm.bind(React.createElement);
const { useState, useEffect, useMemo } = React;


// --- Data ---
const dtRawData = `1	DIKI SAPUTRA	HANVAN XCMG 51	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
2	M. ZAINATUL AGUNG	HANVAN XCMG 51	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D	D	D	D
3	M. NORMAN HAKIM	HANVAN XCMG 55	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
4	VIKI LIANDI	HANVAN XCMG 55	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
5	HERMINTO. R	DT HANVAN 98	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	OFF	D	D
6	BINTARA PRIYANDI	DT HANVAN 98	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N
7	RIDHO ILLAFI SUKMA	DT HANVAN 99(BREAKDOWN)	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D
8	RUDI HARTONO	DT HANVAN 99(BREAKDOWN)	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N
9	TOUPIT ASMAN	DT HANVAN 100	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR
10	ADIANTO	DT HANVAN 100	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
11	TENGGO NOVRIAN	DT HANVAN 101	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N
12	MINAL BAHRI	DT HANVAN 101	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D
13	GUNDALA	DT HANVAN 102	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
14	FITRI ARYA PUTRA	DT HANVAN 102	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
15	ADE KURNIAWAN	DT HANVAN 103	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
16	NANDA NOVIANDI	DT HANVAN 103	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
17	KELVIN PRANATA	DT HANVAN 104	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
18	FERI ANGGRIAWAN	DT HANVAN 104	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	N	OFF	D	D	D	D	D
19	OWEN RAHMADANI MAHENDRA	DT HANVAN 105	N	N	N	OFF	D	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF
20	DODI CANDRA	DT HANVAN 105	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N
21	SANDRA HALIYA PUTRA	DT HANVAN 188	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
22	ALEX TORNANDO	DT HANVAN 188	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
23	SUMARTO	DT HANVAN 189	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
24	MUJI SATRIA NOTO SUSENO	DT HANVAN 189	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
25	UCI PURWANTO	DT HANVAN 190	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N
26	DODI PRAYOGI	DT HANVAN 190	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR
27	DOLI INDRA	DT HANVAN 191	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR
28	FERRY ADRIAN	DT HANVAN 191	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	OFF	D	D	D
29	EGI WIRANTO	DT HANVAN 192	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D
30	WAHYU IMAM MAULANA	DT HANVAN 192	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N
31	ARIA DEBIANTO TARIGAN	DT HANVAN 193	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
32	HARIONO	DT HANVAN 193	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N
33	SADAM HUSEN	DT HANVAN 194	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N
34	GUNAWAN MAHENDRA	DT HANVAN 194	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	OFF	D	D
35	HERMAN SAPUTRA	DT HANVAN 195	OFF	D	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N
36	EGI APRILI MARTA	DT HANVAN 195	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
37	FAREL ANANDA PARINDRA	DT HANVAN 196(BREAKDOWN)	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
38	PERISTIAWAN	DT HANVAN 196(BREAKDOWN)	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
39	SUGIHARTO	DT HANVAN 197	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
40	JONI ARDILES	DT HANVAN 197	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
41	YOPI ILHAMI	DT HANVAN 198	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
42	PURWOKO	DT HANVAN 198	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
43	AL ZONIKA	DT HANVAN 199	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
44	M. ILHAM SURYA WARDANA LUMY	DT HANVAN 199	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR
45	CHARLES BILLANDIS	DT HANVAN 200	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
46	REDI SYAPUTRA	DT HANVAN 200	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
47	MUHAMMAD FAJAR AFIKI	DT HANVAN 201	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N
48	AGAM PRAYUDI	DT HANVAN 201	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
49	RISKY TRY UTANI	DT HANVAN 202	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
50	SETIA BUDI	DT HANVAN 202	N	N	OFF	D	D	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N
51	ASMAREKI	DT HANVAN 203	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
52	IRFAN ARIANDI	DT HANVAN 203	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
53	ENGKI PANHOTEN	DT HANVAN 204	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
54	ANDI PRADANA	DT HANVAN 204	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
55	PANCA SUKMA WARDI	DT HANVAN 205	OFF	D	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
56	EKO RIZALDI	DT HANVAN 205	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N
57	WAHYU RAMADAN	DT HANVAN 206	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N
58	ROBBY NANDA SYAPUTRA	DT HANVAN 206	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
59	HARMANCA	DT HANVAN 207	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
60	DESRIANTO	DT HANVAN 207	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
61	M. RIZKI AKBAR	DT HANVAN 208	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
62	ANDIANSYAH	DT HANVAN 208	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
63	IWAN LUBIS	DT HANVAN 209	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
64	IWEN OGILVI SAPUTRA	DT HANVAN 209	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR
65	DEPRIWAN	DT HANVAN 210	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	N	OFF
66	REDO ILAHI	DT HANVAN 210	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	CR
67	RINALDI	DT HANVAN 211	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	OFF	D	D
68	APRIANDA MUTIYOVA	DT HANVAN 211	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
69	MHD ROZALI	DT HANVAN 212	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
70	SUYONO. P	DT HANVAN 212	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
71	YOGI DIKA PUTRA	DT HANVAN 213	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
72	HADIANTO	DT HANVAN 213	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
73	YAN ALBERT	DT HANVAN 214	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
74	GUSTI MAHENDRA	DT HANVAN 214	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	CR	CR	CR
75	ZULFAHMI	DT HANVAN 215	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
76	LUKMAN HAKIM ICHWAN	DT HANVAN 215	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR
77	SUDARSO	DT HANVAN 216	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
78	ARI WIBOWO	DT HANVAN 216	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
79	AGRI DASLINO PRATAMA	DT HANVAN 217	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
80	HERCULES	DT HANVAN 217	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
81	ERIK USTRANI	DT HANVAN 218	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
82	ANDRE HASKOPER	DT HANVAN 218	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
83	CANDRA INDRA	DT HANVAN 219	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
84	PALMA	DT HANVAN 219	CR	CR	I	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
85	ADI KUSNADI	DT HANVAN 220	D	D	D	D	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
86	FAJRI ISLAMI	DT HANVAN 220	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
87	ANDIKA SAPUTRA	DT HANVAN 221	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N
88	YOGI ANDRIAN	DT HANVAN 221	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
89	TASRIANTO	DT HANVAN 222	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR
90	RAHMAD DIANSAH	DT HANVAN 222	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
91	BOY DEPRAYANDI	DT HANVAN 223	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
92	GANDUNG HENDRIYAWAN	DT HANVAN 223	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
93	EDO RIO OKTARA	DT HANVAN 224(BREAKDOWN)	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N
94	DIKA PRANATA	DT HANVAN 224(BREAKDOWN)	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR
95	BAYU SYAHPUTRA	DT HANVAN 225	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
96	SAPRIADI	DT HANVAN 225	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
97	SUPRIYADI	DT HANVAN 226	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
98	OKI SAPUTRA	DT HANVAN 226	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
99	EDI SAPUTRA	DT HANVAN 227	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D
100	HENGKI SUDRAJAT	DT HANVAN 227	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
101	FARHAN NOVYANDRA	DT HANVAN 228	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
102	ARBY RAMADHAN	DT HANVAN 228	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
103	JONI	DT HANVAN 229	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
104	GALIH ARMANDO HR	DT HANVAN 229	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR
105	KHAIRONI	DT HANVAN 230	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
106	KUSNEDI	DT HANVAN 230	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
107	ROY MARTHEN	DT HANVAN 231	D	D	D	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
108	POLMA SIJABAT	DT HANVAN 231	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
109	ISMAIL	DT HANVAN 232	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
110	PENI ANDIKA	DT HANVAN 232	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR
111	MHD. DAI FASAID	DT HANVAN 233	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR
112	AGUNG PRANATA	DT HANVAN 233	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
113	ENDANG KUSMA	DT HANVAN 234	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N
114	DINO ISYAH PUTRA UTAMA	DT HANVAN 234	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR
115	ANDITO SAPUTRA	DT HANVAN 235	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
116	ANDI IRAWAN	DT HANVAN 235	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N
117	BANGSA PERANGIN-ANGIN	DT HANVAN 236	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
118	RERI ANDRIONETA	DT HANVAN 236	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
119	BOKNER GALINGGING	DT HANVAN 237	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
120	GALLVIN CARLO	DT HANVAN 237	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
121	SYAFII SIREGAR	DT HANVAN 238	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N
122	RAMA DANI	DT HANVAN 238	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D
123	RIKI SAPUTRA	DT HANVAN 239	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D
124	SANDI WIBOWO	DT HANVAN 239	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
125	RONI SUPARLI	QUESTER 11 CWE 280	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
126	FAISAL AMRI	QUESTER 11 CWE 280	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR
127	IPIN EFENDI	QUESTER 14 CWE 280	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D
128	SARIKANDI	QUESTER 28 CWE 280	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
129	ADI ANUGRAH	QUESTER 28 CWE 280	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
130	RENKI WIGUNA	QUESTER 29 CWE 280	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
131	DEDI SYAFRIADI	QUESTER 29 CWE 280	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR
132	ZULFAHMI FERNANDO	QUESTER 30 CWE 280(BREAKDOWN)	CR	I	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
133	PEJO DELPISA CANDRA	QUESTER 30 CWE 280(BREAKDOWN)	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
134	JUFRIL	QUESTER 31 CWE 280	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
135	DANIL MUSTAPA HARUN	QUESTER 31 CWE 280	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR
136	MANGARA TUA SIANTURI	QUESTER 32 CWE 280(BREAKDOWN)	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
137	MUHAMMAD FAJRI AL MARSY	QUESTER 32 CWE 280(BREAKDOWN)	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
138	PIRDAUS	QUESTER 33 CWE 280	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
139	DIDIK HERMAWAN	QUESTER 33 CWE 280	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
140	DANIEL SYAFIKRI	QUESTER 34 CWE 280	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF
141	IKNU SETYAWAN	QUESTER 34 CWE 280	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	OFF	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
142	KEPRIANTO	QUESTER 35 CWE 280	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
143	ALDI PRAJANATA	QUESTER 35 CWE 280	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
144	NASRIANDI	QUESTER 37 CWE 280(BREAKDOWN)	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N
145	REGI ARMI VOLANDRA	QUESTER 37 CWE 280(BREAKDOWN)	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
146	TRI SUSANTO	QUESTER 38 CWE 280	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
147	ALFI ZULFAROLI	QUESTER 38 CWE 280	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR
148	DEDI HENDRA	QUESTER 39 CWE 280	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
149	NANDO EKA PUTRA	QUESTER 39 CWE 280	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D
150	ROBY KURNIADO	QUESTER 41 CWE 280	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR
151	WIDI ASROFI	QUESTER 41 CWE 280	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
152	MUHAMMAD NUR SOFYAN	QUESTER 44  CWE 280(BREAKDOWN)	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
153	DIAN DAFIT	QUESTER 44  CWE 280(BREAKDOWN)	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
154	M. REJA	QUESTER 45  CWE 280(BREAKDOWN)	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
155	ALTASER	QUESTER 45  CWE 280(BREAKDOWN)	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D
156	PANDI ZIKRILLAH	QUESTER 46  CWE 280	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
157	RHADIUS PUTRA WIRA	QUESTER 46  CWE 280	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF
158	DICKY PRANATA HS	QUESTER 47  CWE 280(BREAKDOWN)	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
159	ALIT PITOYO	QUESTER 47  CWE 280(BREAKDOWN)	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
160	BENITA INDRA	QUESTER 07 CWE 370	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D
161	FAISAL	QUESTER 07 CWE 370	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
162	ARGIANTO	QUESTER 17 CWE 370	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR
163	PRIANDI RISKI	QUESTER 17 CWE 370	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
164	WAWAN GUSTIAN	QUESTER 18 CWE 370	D	D	D	D	D	D	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR
165	FITRA RAMADHAN	QUESTER 18 CWE 370	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	OFF	D
166	FERY ALDY YANSYA	QUESTER 19 CWE 370	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR
167	IRWAN HIDAYAD	QUESTER 19 CWE 370	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
168	WISNU ADI PARNATA	QUESTER 20 CWE 370(BREAKDOWN)	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	D	D
169	HENDI AFRIKA	QUESTER 20 CWE 370(BREAKDOWN)	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N
170	ARDIANTON	QUESTER 21 CWE 370	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
171	AHMAD CHAIRUL MUSTOPA	QUESTER 21 CWE 370	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
172	MAIRIZALDI	QUESTER 22 CWE 370	D	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR
173	SEPTA NANDA PRAYOGA	QUESTER 22 CWE 370	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N
174	DEDE WAHYUDI	QUESTER 76 CWE 370	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N
175	ARTA DARMA SYAPUTRA	QUESTER 76 CWE 370	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR
176	RONI SAPUTRA	QUESTER 78 CWE 370	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
177	RIDIANTO RODESKA	QUESTER 78 CWE 370	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
178	MEGI RISMAYANTO	QUESTER 79 CWE 370	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D
179	HENDRI	QUESTER 79 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N
180	ASHABUL AIFANI	QUESTER 80 CWE 370	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
181	ANDRE ANDIKA RAMADAN	QUESTER 80 CWE 370	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
182	ANTON ASPAPERA	QUESTER 81 CWE 370	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
183	JEMVORA EFIL BREN	QUESTER 81 CWE 370	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR
184	MUSTAFA RASYID	QUESTER 82 CWE 370	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
185	HERIANTO	QUESTER 82 CWE 370	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR
186	MALVIN RIFANDA POHAN	QUESTER 83 CWE 370	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
187	ALWIS JAYA	QUESTER 83 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
188	MARDIANTO	QUESTER 84 CWE 370	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR
189	HELFI NANDA	QUESTER 84 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
190	EDY JULIWANTO S	QUESTER 85 CWE 370	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N
191	PROPEL GANDI	QUESTER 85 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
192	OKI OKTANIO	QUESTER 106 CWE 370	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR
193	RAHMAD GUNAWAN	QUESTER 106 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N
194	SANDI BUDI SURYADI	QUESTER 107 CWE 370	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
195	NANDRO SAGITA	QUESTER 107 CWE 370	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR
196	PRIMA MIDIONO	QUESTER 108 CWE 370	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
197	BUDI SARWONO	QUESTER 108 CWE 370	N	N	N	OFF	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
198	ARI YAHYA	QUESTER 124 CWE 370	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
199	APENDI	QUESTER 124 CWE 370	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	N
200	YANDRA APRINALDI	QUESTER 125 CWE 370	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
201	ROYNALDI	QUESTER 125 CWE 370	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
202	NURMAN	DT 03 ORANGE	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
203	DEDE SUMANTRI	DT 03 ORANGE	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
204	ALFIAN	DT 04 ORANGE	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
205	YULIUS	DT 04 ORANGE	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D
206	JOND ANDRI SYAPUTRA	DT 05 ORANGE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N
207	ROMA DANI	DT 05 ORANGE	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
208	BOBI JASTRIADI	DT 63 ORANGE	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
209	JALPION	DT 63 ORANGE	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	N	N
210	DITO PUTRA	DT 65 ORANGE	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
211	ARLIS	DT 65 ORANGE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
212	ENNO	DT 66 ORANGE	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR
213	NANDA ADITYA PRATAMA	DT 66 ORANGE	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
214	DEDI GUSTIAWAN	DT 67 ORANGE	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
215	AMRIANTO	DT 67 ORANGE	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
216	MERZA ADE PUTRA	DT 109 ORANGE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
217	EGO SAPUTRA	DT 109 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
218	GIO ANTONI	DT 110 ORANGE	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N
219	ANDRI	DT 110 ORANGE	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D
220	ARISMAN	DT 111 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
221	BORKAT SIREGAR	DT 111 ORANGE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
222	M. ROBI YANTO	DT 112 ORANGE	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
223	ARI KURNIAWAN	DT 112 ORANGE	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
224	RANGGA SYAHPUTRA	DT 114 ORANGE	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
225	RABILU SANDI	DT 114 ORANGE	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
226	INDIKA BOBI PRATAMA	DT 115 ORANGE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
227	ANDIKA	DT 115 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N
228	LEARDO YOGI LABENDRA	DT 116 ORANGE	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
229	ANDI	DT 116 ORANGE	CR	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
230	SUROTO	DT 119 ORANGE(BREAKDOWN)	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
231	PUR WANTO	DT 119 ORANGE(BREAKDOWN)	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
232	SLAMET	DT 120 ORANGE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N
233	JULPAN	DT 120 ORANGE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
234	SUTRISNO	DT 121 ORANGE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
235	GAPIS SAGITA	DT 121 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N
236	RIFFANDI IHSAN	DT 122 ORANGE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
237	MUHAMMAD FAZAL KHAN	DT 122 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
238	RIO PEBRIAN	DT 123 ORANGE(BREAKDOWN)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
239	BENNY SAPUTRA	DT 123 ORANGE(BREAKDOWN)	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
240	BENI RAMADANI	DT HINO 01 (68)(BREAKDOWN)	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
241	APRIYADI	DT HINO 01 (68)(BREAKDOWN)	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D
242	HAMID	DT HINO 02 (69)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N
243	RAHMAT PRIADI	DT HINO 02 (69)	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
244	SUWANDI HADI S	DT HINO 03 (70)	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
245	MUHAMMAD FAHREZA AKBAR	DT HINO 03 (70)	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N
246	DICKY RAMADHANI	DT HINO 05 (72)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
247	TRI SEPRINALDI	DT HINO 05 (72)	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D
248	AHMAD SLAMED	DT FIGHTER 73	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
249	MUKRI INDRA SAPUTRA	DT FIGHTER 73	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N
250	RISKI RAMADANI	DT FIGHTER 74	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D
251	ARIF SYAHFRUDIN	DT FIGHTER 74	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR
252	DONES MARTHA ZULPERLIN	DT FIGHTER 75(BREAKDOWN)	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
253	HADI KESUMA	DT FIGHTER 75(BREAKDOWN)	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
254	R. MAMBI	DRIVER DT SPARE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR
255	NOPRIANDI	DRIVER DT SPARE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR
256	GENTA AULIA GUNTUR	DRIVER DT SPARE	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
257	ABIL JANUANDA RIZKY	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR
258	JOKO TRIANTO	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
259	MUHAMMAD AMIN	DRIVER DT SPARE	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR
260	SURIANTO	DRIVER DT SPARE	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D
261	ASPARAINI	DRIVER DT SPARE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR
262	RANGGA APRIANZA	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR
263	JHONATAN YESA PUTRA	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	CR	CR
264	BERKAH ALHADI. S	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N
265	OCTO GANDA MARTUA	DRIVER DT SPARE	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR
266	SADRI RAMADANI	DRIVER DT SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR
267	NOPRI NADA SAPUTRA	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
268	WIDI KURNIAWAN	DRIVER DT SPARE	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
269	WILLIE HARYAJI MOES	DRIVER DT SPARE	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
270	PENI ERWANDI	DRIVER DT SPARE	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D
271	NANDA SYAHPUTRA	DRIVER DT SPARE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR
272	RANDA	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR
273	BOBI ARTANTO	DRIVER DT SPARE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR
274	EKA KUSDIANTO	DRIVER DT SPARE	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR
275	GRIMALDI	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N
276	REKI HERDANTONI	DRIVER DT SPARE	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR
277	AGUNG SUGIHARTO	DRIVER DT SPARE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
278	ANGGA ADI PUTRA	DRIVER DT SPARE	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
279	MUHAMMAD YANI	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR
280	MARLANI	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
281	MASDIANSYAH	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
282	ARISMAN. J	DRIVER DT SPARE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
283	RIO RAFLES SINAGA	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF
284	DIO SYAHPUTRA	DRIVER DT SPARE	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N
285	SIWIN CANIAGO	DRIVER DT SPARE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
286	IRWAN	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
287	LUTFI ANDRIANTO	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
288	DENAS ANDIKA ROSZI	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
289	VITO PRASETYO	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N
290	SELAMET	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
291	HANNA SETIA GRAHAFFY	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
292	NANANG MAULANA	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
293	ANDIKA ARDIAN	DRIVER DT SPARE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
294	INDRA BUANA	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
295	ALDONI CANDRA	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
296	JAMAL	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
297	MIONO WIBOWO	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
298	JHONI ALPUTRA	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
299	RANGGA SENARU	DRIVER DT SPARE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
300	KHAIRUL	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
301	ERISON	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N
302	JODI WINALDO	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
303	RIO AFRIADI	DRIVER DT SPARE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
304	SUKMA MUHARIANTO	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
305	ARI PRA SATIO	DRIVER DT SPARE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
306	HERI APRIZAL	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
307	BUDIMAN MARPAUNG	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
308	SOPIAN HADI	DRIVER DT SPARE	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
309	HENDI JAI	DRIVER DT SPARE	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
310	YOGA SABRAN HUDA	DRIVER DT SPARE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
311	MISGIADI	DRIVER DT SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
312	EKA NOPRIANTO	DRIVER DT SPARE	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF`;

const excavatorRawData = `313	ANDIKA PRADIFTA	EXCAVATOR 402	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
314	SUMPENA ISKANDAR	EXCAVATOR 402	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
315	DONNY MERDAHADI	EXCAVATOR 404	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR
316	WAHYUDI HERPANI	EXCAVATOR 404	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF
317	MULYANTO	EXCAVATOR 405	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	N	OFF	D	D	D	D	D	D	D
318	AGUS FITRIAWAN	EXCAVATOR 405	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
319	ANDI KURNIAWAN	EXCAVATOR 406	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N	N
320	MARDIANSYAH	EXCAVATOR 406	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N
321	FEBRY SAPUTRA	EXCAVATOR 407	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR
322	FAIZ SIROJUDIN	EXCAVATOR 407	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
323	ARDILES	EXCAVATOR 408	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
324	MOREL	EXCAVATOR 408	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
325	NURDANA	EXCAVATOR 409	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	D	N	N	N	N	N	N
326	IKHSAN	EXCAVATOR 409	D	D	D	D	D	D	D	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
327	M. IKSAN	EXCAVATOR 410	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
328	HARNO	EXCAVATOR 410	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
329	REFFI ISMERLIND	EXCAVATOR 411	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
330	ALKADIF ISMAIL	EXCAVATOR 411	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N
331	ANDES	EXCAVATOR 412	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	N	N	N	N	OFF	D	D	D	D
332	EDY WARDIAN	EXCAVATOR 412	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
333	FAHROZI SAPUTRA	EXCAVATOR 414(BREAKDOWN)	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
334	DONNI OKTANDI	EXCAVATOR 414(BREAKDOWN)	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
335	EMDA MARYOGI	EXCAVATOR 416	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR
336	ARIS ADINATA	EXCAVATOR 416	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
337	JEFRINALDI	EXCAVATOR 425	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	N	N	OFF	D	D	D	D	D	N	N	N	N	N
338	AKIMIS	EXCAVATOR 425	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
339	JEMSTAR SIHOMBING	EXCAVATOR 426	CR	CR	CR	CR	CR	CR	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF
340	ANGGI JUANDA	EXCAVATOR 426	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
341	LENDRA	EXCAVATOR 427	CR	CR	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D
342	ACCEPT LEAFY	EXCAVATOR 427	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N
343	MUHAMMAD SYAPRIZAL	EXCAVATOR 428	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
344	JATRIADIN	EXCAVATOR 428	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
345	SABARIONO	EXCAVATOR 429	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
346	GUSNI SYAWAL	EXCAVATOR 429	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
347	BOY SHANDI	EXCAVATOR 430	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
348	DANI S. SITANGGANG	EXCAVATOR 430	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	OFF	D	D	D
349	FERNANDO SINAGA	EXCAVATOR 431	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
350	IJON P SIMARMATA	EXCAVATOR 431	CR	CR	CR	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
351	HENDRIK	EXCAVATOR 432	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N
352	RAMLAN	EXCAVATOR 432	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR
353	SAFRIADI	EXCAVATOR 433	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
354	ARDIANTO SITOMPUL	EXCAVATOR 433	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D
355	DEDEK SETIAWAN	EXCAVATOR 434	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
356	RIDUAN M.TOGATOROP	EXCAVATOR 434	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
357	SUWITO	EXCAVATOR 506	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N	OFF	D
358	IRWAN	EXCAVATOR 506	N	OFF	D	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	D	D	N
359	AGUS SUSANTO	EXCAVATOR 507	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D
360	A YANI MILBAR	EXCAVATOR 507	N	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	N	N	N	N
361	SYAHRI ROMADON	EXCAVATOR 508	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
362	OCTA MAULANA SYAHPUTRA	EXCAVATOR 508	D	D	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N	N	N	N	N	N	N	OFF	D
363	ANDREAS HARAS	EXCAVATOR SPARE	N	N	OFF	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	N	N	N
364	SARJA	EXCAVATOR SPARE	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
365	FEDO ALDI AMBARITA	EXCAVATOR SPARE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
366	JHONSON ADI PUTRA SINAGA	EXCAVATOR SPARE	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	N	N	N	N	N	N
367	EDI WASITO	EXCAVATOR SPARE	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D
368	HERIYANTO SIHOMBING	EXCAVATOR SPARE	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
369	WAHYU SAPUTRA	EXCAVATOR SPARE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
370	FIRMAN SYARIF	EXCAVATOR SPARE	CR	CR	CR	CR	CR	D	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
371	BAMBANG SUTRISNO	EXCAVATOR SPARE	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
372	SAHAT SIREGAR	EXCAVATOR SPARE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
373	JON HENRI HALOHO	EXCAVATOR SPARE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D
374	MUHAMMAD IQBAL.M	EXCAVATOR SPARE	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D
375	SANHERIB SITOMPUL	EXCAVATOR SPARE	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
376	SURIYANTO	EXCAVATOR SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
377	AMINULLAH HASIBUAN	EXCAVATOR SPARE	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	D	N	N	N	N`;

const dozerRawData = `378	ROKI HERMAWAN	DZ KOMATSU 01(BREAKDOWN)	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	N
379	AREA OKTA MIRANDA	DZ KOMATSU 01(BREAKDOWN)	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
380	SYAHRUL SIGALINGGING	DZ KOMATSU 03	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
381	GOGON S	DZ KOMATSU 03	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
382	YUDI YANTO	DZ KOMATSU 08	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D
383	SURIYONO	DZ KOMATSU 08	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N	N
384	HENDRA GUNAWAN	DZ KOMATSU 09	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
385	KIKI ANDRIADI	DZ KOMATSU 09	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR
386	DARYANTO	KOMATSU 10 (STOKFILE)	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
387	ENCEP SUBARNA	KOMATSU 10 (STOKFILE)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
388	RIKI HARTONO	DZ KOMATSU 11	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
389	SATINO	DZ KOMATSU 11	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
390	HENDRIKO ISKANDAR	DZ KOMATSU 19	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	N	N	N	N	N	N	OFF
391	AJAT SUDRAJAT	DZ KOMATSU 19	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
392	SUTRIONO	DZ KOMATSU 29	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
393	HARIS ISKANDAR	DZ KOMATSU 29	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
394	SELAMAT RIYANTO	DZ KOMATSU 33	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N	N	N	N	N	N	OFF	D	D
395	M. ISYA	DZ KOMATSU 33	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N
396	YOSSY GUSMAN	DZ KOMATSU 34	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
397	YOGA TEDI PRATAMA	DZ KOMATSU 34	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR
398	EKA SRIL	DZ KOMATSU 35	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
399	MELDI MUZALDA ALFA	DZ KOMATSU 35	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
400	SURIANTO	DZ KOMATSU 36	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
401	SURATNO	DZ KOMATSU 36	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	N
402	FERYANTO SIRAIT	DZ KOMATSU 37	CR	CR	CR	D	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
403	SULTAN SIPAHUTAR	DZ KOMATSU 37	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
404	EKA PUTRA KURNIAWAN	DZ LIU GONG 02	CR	CR	CR	CR	D	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
405	IGO PRASETYO	DZ LIU GONG 02	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
406	ERJENCES SINAGA	DZ LIU GONG 03	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D
407	YOGA ASTIKA	DZ LIU GONG 03	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N
408	DEDI KANDRA	DZ SHANTUY 07	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	N	N	N	N	N	N	OFF	D	D
409	ADI PRAWIBOWO	DZ SHANTUY 07	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
410	KHOIRUL SALEH LUBIS	DZ SHANTUI 26(BREAKDOWN)	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR
411	ADRIL ANDONI	DZ SHANTUI 26(BREAKDOWN)	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
412	DEDI HENDRA	SPARE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
413	JERRY YAN MACHER	SPARE	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N
414	RAHMAN AFRIADI	SPARE	D	D	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
415	JEFRI MIDIANTO	SPARE	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D
416	JEFFRI ARDIANSYAH	SPARE	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N
417	NURIDIN	SPARE	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	D	D	D	D	D	D	N	N	N	N	N
418	ZULKIFLI	SPARE	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
419	BUDI UTOMO	SPARE	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
420	FENDY HALOMON SIREG	SPARE	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
421	FAJAR NURHADI	SPARE	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF
22	EKA SAPUTRA ARITONAN	SPARE	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
423	RONI DAMATIUS	SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D
424	SELAMET ANUGRAH ADI	SPARE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N`;


// --- Data Parsing Logic ---
const parseManpowerData = (dataString, equipmentType) => {
    const lines = dataString.trim().split('\n');
    const drivers = [];

    lines.forEach((line, index) => {
        try {
            const trimmedLine = line.trim();
            if (!trimmedLine) return;
            const parts = trimmedLine.split('\t');
            if (parts.length < 4) {
                console.warn(`Skipping malformed line ${index + 1}: not enough tab-separated parts. Line: "${line}"`);
                return;
            }

            const id = parseInt(parts[0], 10);
            const name = parts[1].trim();
            const rawUnit = parts[2].trim();
            const isBreakdown = rawUnit.toUpperCase().includes('(BREAKDOWN)');
            const unit = rawUnit.replace(/\(BREAKDOWN\)/ig, '').trim();
            const dailyStatuses = parts.slice(3).map(s => s.trim());
            
            if (isNaN(id) || !name || !unit) {
                console.warn(`Skipping line with invalid data (ID, name, or unit) ${index + 1}: "${line}"`);
                return;
            }

            drivers.push({ id, name, unit, isBreakdown, dailyStatuses, type: equipmentType });

        } catch (error) {
            console.error(`Failed to parse line ${index + 1}: "${line}"`, error);
        }
    });
    return drivers;
};


// --- Kaleder Helpers ---
const getDaysInMonth = (year, month) => {
    return new Date(year, month + 1, 0).getDate();
};
const getFirstDayOfMonth = (year, month) => {
    return new Date(year, month, 1).getDay();
};


// --- Icon Components ---
const DumpTruckIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M20.5 13.5c-.827 0-1.5.673-1.5 1.5s.673 1.5 1.5 1.5 1.5-.673 1.5-1.5-.673-1.5-1.5-1.5zm-11 0c-.827 0-1.5.673-1.5 1.5s.673 1.5 1.5 1.5 1.5-.673 1.5-1.5-.673-1.5-1.5-1.5zm11.5-1.5h-1.25l-2.071-4.143c-.221-.442-.684-.724-1.179-.724h-4c-.495 0-.958.282-1.179.724l-2.071 4.143h-2.25c-2.481 0-4.5 2.019-4.5 4.5v.5c0 .552.448 1 1 1h1c.552 0 1-.448 1-1v-.5c0-1.378 1.121-2.5 2.5-2.5h1.25l.25 1h11l.25-1h2.25c.552 0 1 .448 1 1s-.448 1-1 1h-12.5c-.276 0-.5.224-.5.5s.224.5.5.5h12.5c1.654 0 3-1.346 3-3v-1.5c0-.827-.673-1.5-1.5-1.5z"/></svg>
`;

const ExcavatorIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M22 18v-2c0-1.103-.897-2-2-2h-2.132c-.347-1.183-1.01-2.24-1.868-3.131v-2.869h1c.552 0 1-.449 1-1s-.448-1-1-1h-3c-.552 0-1 .449-1 1s.448 1 1 1h1v3.586c-1.481.565-2.529 1.954-2.71 3.414h-7.29c-.552 0-1 .449-1 1s.448 1 1 1h7.404c.062.531.251 1.031.529 1.475-.246.331-.443.714-.572 1.137-.428.169-.824.419-1.161.732-1.268 1.134-2.016 2.753-2.193 4.51l-1.007.144c-.53.076-.921.564-.845 1.094.076.53.564.921 1.094.845l1.007-.144c.221-1.954 1.126-3.729 2.596-5.025.27-.241.561-.46.867-.652.203.853.579 1.64 1.082 2.308.209.277.525.449.869.449h5c.552 0 1-.449 1-1s-.448-1-1-1h-4.631c-.287-.371-.52-.779-.691-1.213.626-.523 1.128-1.211 1.455-1.995.342-.054.686-.092 1.037-.092h2c1.103 0 2 .897 2 2v2h2c.552 0 1-.449 1-1s-.448-1-1-1h-1zm-19 2c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z"/></svg>
`;

const DozerIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M24 16.5c0-.827-.673-1.5-1.5-1.5h-19c-.827 0-1.5.673-1.5 1.5v.5c0 1.654 1.346 3 3 3h16c1.654 0 3-1.346 3-3v-.5zm-14.5-1.5c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5zm-5 0c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5zm19.5-1c0-.462-.321-.853-.759-.968-1.054-.275-2.224-1.243-2.241-1.26l-3-2.25c-.496-.372-1.18-.372-1.678 0l-3 2.25c-.017.017-1.187.985-2.241 1.26-.438.115-.759.507-.759.968v1h14v-1zm-4.75-5.25c-.219-.344-.573-.564-.961-.591-1.054-.076-1.559-.851-1.58-.875l-1-1.25c-.244-.305-.63-.484-1.039-.484s-.795.179-1.039-.484l-1 1.25c-.021.024-.526.799-1.58.875-.388.027-.742.247-.961.591-.321.505-.221 1.17.24 1.547l5 3.75c.244.183.56.278.88.278s.636-.095.88-.278l5-3.75c.461-.377.562-1.042.24-1.547z"/></svg>
`;

const NoteIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
        <path d="M5.433 13.917l1.262-3.155A4 4 0 017.58 9.42l6.92-6.918a2.121 2.121 0 013 3l-6.92 6.918c-.383.383-.84.685-1.343.886l-3.154 1.262a.5.5 0 01-.65-.65z" />
        <path d="M3.5 5.75c0-.69.56-1.25 1.25-1.25H10A.75.75 0 0010 3H4.75A2.75 2.75 0 002 5.75v9.5A2.75 2.75 0 004.75 18h9.5A2.75 2.75 0 0017 15.25V10a.75.75 0 00-1.5 0v5.25c0 .69-.56 1.25-1.25 1.25h-9.5c-.69 0-1.25-.56-1.25-1.25v-9.5z" />
    </svg>
`;

const SearchIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2">
        <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
    </svg>
`;

// --- UI Components ---
const Sidebar = ({ activeEquipment, onSelectEquipment }) => {
    const navItems = [
        { key: 'dt', label: 'Dump Truck', icon: DumpTruckIcon },
        { key: 'excavator', label: 'Excavator', icon: ExcavatorIcon },
        { key: 'dozer', label: 'Dozer', icon: DozerIcon },
    ];

    return html`
        <aside className="w-64 bg-white dark:bg-slate-800/50 p-4 flex-col flex-shrink-0 shadow-lg hidden lg:flex">
            <div className="text-2xl font-bold text-slate-900 dark:text-white mb-8">
                Equipment
            </div>
            <nav className="flex flex-col space-y-2">
                ${navItems.map(item => html`
                    <button
                        key=${item.key}
                        onClick=${() => onSelectEquipment(item.key)}
                        className=${`flex items-center space-x-3 p-3 rounded-lg text-left font-semibold transition-colors duration-200 ${
                            activeEquipment === item.key
                                ? 'bg-indigo-500 text-white shadow-md'
                                : 'text-slate-600 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-700/50'
                        }`}
                    >
                        <${item.icon} className="w-6 h-6" />
                        <span>${item.label}</span>
                    </button>
                `)}
            </nav>
        </aside>
    `;
};

const BottomNavBar = ({ activeEquipment, onSelectEquipment }) => {
    const navItems = [
        { key: 'dt', label: 'Dump Truck', icon: DumpTruckIcon },
        { key: 'excavator', label: 'Excavator', icon: ExcavatorIcon },
        { key: 'dozer', label: 'Dozer', icon: DozerIcon },
    ];

    return html`
        <nav className="lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700 shadow-t-lg z-40">
            <div className="flex justify-around items-center h-16">
                 ${navItems.map(item => html`
                    <button
                        key=${item.key}
                        onClick=${() => onSelectEquipment(item.key)}
                        className=${`flex flex-col items-center justify-center w-full h-full transition-colors duration-200 ${
                             activeEquipment === item.key
                                ? 'text-indigo-600 dark:text-indigo-400'
                                : 'text-slate-500 dark:text-slate-400 hover:text-indigo-500'
                        }`}
                    >
                        <${item.icon} className="w-6 h-6 mb-1" />
                        <span className="text-xs font-medium">${item.label}</span>
                    </button>
                `)}
            </div>
        </nav>
    `;
}

const Calendar = ({ selectedDate, setSelectedDate, daysWithNotes }) => {
    const displayYear = 2025;
    const displayMonth = 8; 

    const monthName = new Date(displayYear, displayMonth).toLocaleString('default', { month: 'long' });
    const daysInMonth = getDaysInMonth(displayYear, displayMonth);
    const firstDay = getFirstDayOfMonth(displayYear, displayMonth);

    const today = new Date();
    const isCurrentMonth = today.getFullYear() === displayYear && today.getMonth() === displayMonth;
    
    const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);
    const emptyDays = Array.from({ length: firstDay });

    const handleDayClick = (day) => {
        setSelectedDate(new Date(displayYear, displayMonth, day));
    };
    
    return html`
        <div className="bg-white dark:bg-slate-800/50 p-4 sm:p-6 rounded-2xl shadow-lg mb-8">
            <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-semibold text-slate-800 dark:text-white">${monthName} ${displayYear}</h3>
            </div>
            <div className="grid grid-cols-7 gap-1 text-center text-sm">
                ${['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => html`
                    <div key=${day} className="font-medium text-slate-500 dark:text-slate-400 py-2">${day.slice(0,2)}</div>
                `)}
                ${emptyDays.map((_, index) => html`<div key=${`empty-${index}`} />`)}
                ${days.map(day => {
                    const isSelected = selectedDate.getDate() === day && selectedDate.getMonth() === displayMonth && selectedDate.getFullYear() === displayYear;
                    const isToday = isCurrentMonth && today.getDate() === day;
                    
                    const currentDateStr = new Date(displayYear, displayMonth, day).toISOString().split('T')[0];
                    const hasNote = daysWithNotes.has(currentDateStr);

                    const buttonClasses = `w-10 h-10 flex items-center justify-center rounded-full transition-colors duration-200 font-medium relative
                        ${isSelected ? 'bg-indigo-500 text-white shadow-lg' : ''}
                        ${!isSelected && isToday ? 'text-indigo-600 dark:text-indigo-400 ring-2 ring-indigo-300' : ''}
                        ${!isSelected ? 'hover:bg-slate-100 dark:hover:bg-slate-700' : ''}
                    `;
                    return html`
                        <div key=${day} className="flex justify-center items-center">
                            <button onClick=${() => handleDayClick(day)} className=${buttonClasses}>
                                ${day}
                                ${hasNote && html`<div className="absolute bottom-1.5 w-1.5 h-1.5 bg-indigo-400 dark:bg-indigo-500 rounded-full"></div>`}
                            </button>
                        </div>
                    `;
                })}
            </div>
        </div>
    `;
};


const StatusBadge = ({ status }) => {
    const statusStyles = {
        D: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
        N: 'bg-sky-100 text-sky-800 dark:bg-sky-900 dark:text-sky-300',
        CR: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',
        OFF: 'bg-slate-200 text-slate-800 dark:bg-slate-700 dark:text-slate-300',
        I: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',
    };
    const defaultStyle = 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';
    return html`
        <span className=${`px-3 py-1 text-xs font-semibold leading-5 rounded-full ${statusStyles[status] || defaultStyle}`}>
            ${status}
        </span>
    `;
};

const DashboardCard = ({ title, value, icon, color }) => html`
    <div className="bg-white dark:bg-slate-800 p-6 rounded-2xl shadow-lg flex items-center space-x-4 transition-transform hover:scale-105">
        <div className=${`p-3 rounded-xl ${color}`}>
            ${icon}
        </div>
        <div>
            <p className="text-sm font-medium text-slate-500 dark:text-slate-400">${title}</p>
            <p className="text-3xl font-bold text-slate-800 dark:text-slate-100">${value}</p>
        </div>
    </div>
`;

const NoteModal = ({ isOpen, onClose, onSave, target, notes, selectedDate }) => {
    if (!isOpen) return null;

    const [noteText, setNoteText] = useState('');

    const noteKey = `${selectedDate.toISOString().split('T')[0]}-${target.id}`;

    useEffect(() => {
        setNoteText(notes[noteKey] || '');
    }, [isOpen, target, notes, noteKey]);

    const handleSave = () => {
        onSave(noteKey, noteText);
    };

    return html`
        <div className="fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4 backdrop-blur-sm" onClick=${onClose}>
            <div className="bg-white dark:bg-slate-800 rounded-2xl shadow-xl w-full max-w-md p-6" onClick=${e => e.stopPropagation()}>
                <div className="flex justify-between items-center mb-4">
                    <h2 className="text-xl font-bold text-slate-900 dark:text-white">Add/Edit Note</h2>
                    <button onClick=${onClose} className="text-slate-400 hover:text-slate-600 dark:hover:text-white">
                        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                    </button>
                </div>
                <div className="mb-4">
                    <p className="text-sm text-slate-500 dark:text-slate-400">For: <span className="font-semibold text-slate-700 dark:text-slate-200">${target.name}</span></p>
                    <p className="text-sm text-slate-500 dark:text-slate-400">Date: <span className="font-semibold text-slate-700 dark:text-slate-200">${selectedDate.toLocaleDateString()}</span></p>
                </div>
                <textarea
                    value=${noteText}
                    onChange=${e => setNoteText(e.target.value)}
                    placeholder="Enter task or note here..."
                    className="w-full h-32 p-3 border border-slate-300 dark:border-slate-600 rounded-lg bg-slate-50 dark:bg-slate-700 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition"
                ></textarea>
                <div className="mt-6 flex justify-end space-x-3">
                    <button onClick=${onClose} className="px-4 py-2 rounded-lg text-sm font-semibold bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-200 transition">Cancel</button>
                    <button onClick=${handleSave} className="px-4 py-2 rounded-lg text-sm font-semibold bg-indigo-500 hover:bg-indigo-600 text-white transition shadow">Save Note</button>
                </div>
            </div>
        </div>
    `;
};

// --- Main Application Component ---
const App = () => {
    const [allData, setAllData] = useState({ drivers: [], units: [], spareDrivers: [] });
    
    const getInitialDate = () => {
        const jakartaDate = new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' }));

        const dataYear = 2025;
        const dataMonth = 8; 

        if (jakartaDate.getFullYear() === dataYear && jakartaDate.getMonth() === dataMonth) {
            return jakartaDate;
        }

        return new Date(dataYear, dataMonth, 1);
    };
    const [selectedDate, setSelectedDate] = useState(getInitialDate());

    const [activeShift, setActiveShift] = useState('day');
    const [activeDetailTab, setActiveDetailTab] = useState('on_duty');
    const [activeEquipment, setActiveEquipment] = useState('dt');
    
    const [notes, setNotes] = useState({});
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [modalTarget, setModalTarget] = useState(null); // { type, id, name }
    const [searchQuery, setSearchQuery] = useState('');

    useEffect(() => {
        const dtDrivers = parseManpowerData(dtRawData, 'dt');
        const excavatorDrivers = parseManpowerData(excavatorRawData, 'excavator');
        const dozerDrivers = parseManpowerData(dozerRawData, 'dozer');
        const parsedDrivers = [...dtDrivers, ...excavatorDrivers, ...dozerDrivers];

        const regularDrivers = parsedDrivers.filter(d => !d.unit.toUpperCase().includes('SPARE'));
        const currentSpareDrivers = parsedDrivers.filter(d => d.unit.toUpperCase().includes('SPARE'));

        const unitsMap = new Map();
        regularDrivers.forEach(driver => {
            const existing = unitsMap.get(driver.unit) || [];
            unitsMap.set(driver.unit, [...existing, driver]);
        });

        const unitsArray = Array.from(unitsMap.values())
            .filter(drivers => drivers.length > 0)
            .map(drivers => {
                const unitName = drivers[0].unit;
                const upperUnitName = unitName.toUpperCase();
                const isBreakdown = drivers[0].isBreakdown;
                let type = 'dt';
                if (upperUnitName.includes('EXCAVATOR')) type = 'excavator';
                else if (upperUnitName.includes('DOZER') || upperUnitName.includes('DZ')) type = 'dozer';
                return { name: unitName, drivers, type, isBreakdown };
            });
        
        setAllData({ drivers: parsedDrivers, units: unitsArray, spareDrivers: currentSpareDrivers });
    }, []);
    
    useEffect(() => {
        setActiveDetailTab('on_duty');
        setSearchQuery('');
    }, [activeShift, activeEquipment]);

    useEffect(() => {
        setSearchQuery('');
    }, [activeDetailTab]);

    const handleOpenModal = (type, item) => {
        const target = type === 'driver'
            ? { id: item.driver.id, name: item.driver.name, type: 'driver' }
            : { id: item.unitName, name: item.unitName, type: 'unit' };
        setModalTarget(target);
        setIsModalOpen(true);
    };

    const handleCloseModal = () => {
        setIsModalOpen(false);
        setModalTarget(null);
    };

    const handleSaveNote = (noteKey, noteText) => {
        setNotes(prevNotes => {
            const newNotes = { ...prevNotes };
            if (noteText.trim()) {
                newNotes[noteKey] = noteText.trim();
            } else {
                delete newNotes[noteKey]; 
            }
            return newNotes;
        });
        handleCloseModal();
    };
    
    const handleSelectEquipment = (equipment) => {
        setActiveEquipment(equipment);
    };

    const { drivers, units, spareDrivers } = useMemo(() => {
        const filteredDrivers = allData.drivers.filter(d => d.type === activeEquipment);
        const filteredSpareDrivers = allData.spareDrivers.filter(d => d.type === activeEquipment);
        const filteredUnits = allData.units.filter(u => u.type === activeEquipment);
        return { drivers: filteredDrivers, units: filteredUnits, spareDrivers: filteredSpareDrivers };
    }, [allData, activeEquipment]);

    const dailyData = useMemo(() => {
        const dayIndex = selectedDate.getDate() - 1;
        if (dayIndex < 0 || dayIndex > 30) return null;

        const onDutyDay = [];
        const onDutyNight = [];
        const onRooster = [];
        const onOff = [];
        const onInduction = [];
        const breakdownUnitsDay = [];
        const breakdownUnitsNight = [];

        drivers.forEach(driver => {
            const status = driver.dailyStatuses[dayIndex];

            if (status === 'D') {
                onDutyDay.push({ driver, shift: 'Day' });
            } else if (status === 'N') {
                onDutyNight.push({ driver, shift: 'Night' });
            } else if (status === 'CR') {
                onRooster.push({ driver });
            } else if (status === 'OFF') {
                onOff.push({ driver });
            } else if (status === 'I') {
                onInduction.push({ driver });
            }
        });

        const emptyUnitsDay = [];
        const emptyUnitsNight = [];

        units.forEach(unit => {
            if (unit.isBreakdown) {
                const dayDriver = unit.drivers.find(d => d.dailyStatuses[dayIndex] === 'D');
                const nightDriver = unit.drivers.find(d => d.dailyStatuses[dayIndex] === 'N');
                breakdownUnitsDay.push({ unitName: unit.name, driver: dayDriver || null, shift: 'Day' });
                breakdownUnitsNight.push({ unitName: unit.name, driver: nightDriver || null, shift: 'Night' });
                return;
            }

            const isMannedDay = unit.drivers.some(d => d.dailyStatuses[dayIndex] === 'D');
            const isMannedNight = unit.drivers.some(d => d.dailyStatuses[dayIndex] === 'N');

            if (!isMannedDay) {
                emptyUnitsDay.push({ unitName: unit.name, shift: 'Day' });
            }

            if (!isMannedNight) {
                emptyUnitsNight.push({ unitName: unit.name, shift: 'Night' });
            }
        });
        
        const totalOnRooster = drivers.filter(d => d.dailyStatuses[dayIndex] === 'CR').length;
        
        const regularSparesDay = spareDrivers.filter(d => d.dailyStatuses[dayIndex] === 'D').length;
        const regularSparesNight = spareDrivers.filter(d => d.dailyStatuses[dayIndex] === 'N').length;

        const breakdownUnitDriversDay = units
            .filter(u => u.isBreakdown)
            .flatMap(u => u.drivers)
            .filter(d => d.dailyStatuses[dayIndex] === 'D').length;
            
        const breakdownUnitDriversNight = units
            .filter(u => u.isBreakdown)
            .flatMap(u => u.drivers)
            .filter(d => d.dailyStatuses[dayIndex] === 'N').length;

        const availableSparesDay = regularSparesDay + breakdownUnitDriversDay;
        const availableSparesNight = regularSparesNight + breakdownUnitDriversNight;

        const equipmentLabel = activeEquipment === 'dt' ? 'DT' : (activeEquipment.charAt(0).toUpperCase() + activeEquipment.slice(1));

        return {
           day: {
                onDuty: onDutyDay, 
                emptyUnits: emptyUnitsDay, 
                onRooster: onRooster.map(item => ({...item, shift: 'Day'})),
                onOff: onOff.map(item => ({...item, shift: 'Day'})),
                onInduction: onInduction.map(item => ({...item, shift: 'Day'})),
                breakdownUnits: breakdownUnitsDay,
                stats: { onDutyCount: onDutyDay.length, emptyCount: emptyUnitsDay.length, roosterCount: totalOnRooster, availableSpares: availableSparesDay, breakdownCount: breakdownUnitsDay.length, equipmentLabel }
           },
           night: {
                onDuty: onDutyNight, 
                emptyUnits: emptyUnitsNight, 
                onRooster: onRooster.map(item => ({...item, shift: 'Night'})),
                onOff: onOff.map(item => ({...item, shift: 'Night'})),
                onInduction: onInduction.map(item => ({...item, shift: 'Night'})),
                breakdownUnits: breakdownUnitsNight,
                stats: { onDutyCount: onDutyNight.length, emptyCount: emptyUnitsNight.length, roosterCount: totalOnRooster, availableSpares: availableSparesNight, breakdownCount: breakdownUnitsNight.length, equipmentLabel }
           }
        };
    }, [selectedDate, drivers, units, spareDrivers, activeEquipment]);
    
    const daysWithNotes = useMemo(() => {
        const dates = new Set();
        Object.keys(notes).forEach(key => {
            dates.add(key.substring(0, 10));
        });
        return dates;
    }, [notes]);

    const renderList = () => {
        if (!dailyData) return html`<p>Select a valid day.</p>`;

        const currentShiftData = activeShift === 'day' ? dailyData.day : dailyData.night;
        
        const tableHeader = (cols) => html`
            <thead className="bg-slate-50 dark:bg-slate-700/50">
                <tr>
                    ${cols.map(col => html`
                        <th key=${col} scope="col" className="px-6 py-3 text-left text-xs font-medium text-slate-500 dark:text-slate-300 uppercase tracking-wider">
                            ${col}
                        </th>
                    `)}
                </tr>
            </thead>
        `;

        const dataForTab = (tabKey) => {
             switch(tabKey) {
                case 'on_duty': return currentShiftData.onDuty;
                case 'empty_units': return currentShiftData.emptyUnits;
                case 'breakdown': return currentShiftData.breakdownUnits;
                case 'rooster': return currentShiftData.onRooster;
                case 'off': return currentShiftData.onOff;
                case 'induction': return currentShiftData.onInduction;
                default: return [];
            }
        };

        const data = dataForTab(activeDetailTab);

        const filteredData = (data || []).filter(item => {
            if (!searchQuery) return true;
            const query = searchQuery.toLowerCase();

            if (activeDetailTab === 'breakdown') {
                const unitMatch = item.unitName.toLowerCase().includes(query);
                const driverMatch = item.driver ? item.driver.name.toLowerCase().includes(query) : false;
                return unitMatch || driverMatch;
            }
            if (item.driver) {
                return item.driver.name.toLowerCase().includes(query) || 
                       item.driver.unit.toLowerCase().includes(query);
            }
            if (item.unitName) {
                return item.unitName.toLowerCase().includes(query);
            }
            return false;
        });
        
        if (!filteredData || filteredData.length === 0) {
            const message = searchQuery
                ? 'No results found for your search.'
                : 'No data available for this category.';
            return html`<div className="text-center py-10 text-slate-500 dark:text-slate-400">${message}</div>`;
        }
        
        const renderBreakdownUnits = (listData) => html`
            <div className="overflow-x-auto hidden sm:block">
                <table className="min-w-full divide-y divide-slate-200 dark:divide-slate-700">
                    ${tableHeader(['Unit', 'Operator Name', 'Shift'])}
                    <tbody className="bg-white dark:bg-slate-800 divide-y divide-slate-200 dark:divide-slate-700">
                        ${listData.map((item, index) => {
                            if (!item) return null;
                            const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.unitName}`;
                            const hasNote = notes[noteKey];
                            return html`
                            <tr key=${`${item.unitName}-${index}`} onClick=${() => handleOpenModal('unit', item)} className="hover:bg-slate-50 dark:hover:bg-slate-700/50 cursor-pointer">
                                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-slate-900 dark:text-slate-100">
                                    <div className="flex items-center space-x-2">
                                        <span>${item.unitName}</span>
                                        ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400" />`}
                                    </div>
                                </td>
                                <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">${item.driver ? item.driver.name : html`<span className="italic text-slate-400">No Operator</span>`}</td>
                                <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">${item.shift}</td>
                            </tr>
                        `})}
                    </tbody>
                </table>
            </div>
            <div className="space-y-4 sm:hidden">
                ${listData.map((item, index) => {
                    if (!item) return null;
                    const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.unitName}`;
                    const hasNote = notes[noteKey];
                    return html`
                        <div key=${`${item.unitName}-${index}`} onClick=${() => handleOpenModal('unit', item)} className="bg-white dark:bg-slate-800 rounded-lg p-4 shadow-md cursor-pointer">
                           <div className="flex justify-between items-start">
                                <div className="flex flex-col">
                                    <div className="flex items-center space-x-2 mb-1">
                                        <span className="font-bold text-slate-800 dark:text-slate-100">${item.unitName}</span>
                                        ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400" />`}
                                    </div>
                                    <span className="text-sm text-slate-600 dark:text-slate-300">${item.driver ? item.driver.name : html`<span className="italic text-slate-400">No Operator</span>`}</span>
                                </div>
                                <span className="text-xs font-semibold text-slate-500 dark:text-slate-400 bg-slate-100 dark:bg-slate-700 px-2 py-1 rounded">${item.shift} Shift</span>
                           </div>
                        </div>
                    `
                })}
            </div>
        `;

        const renderEmptyUnits = (listData) => html`
            <div className="overflow-x-auto hidden sm:block">
                <table className="min-w-full divide-y divide-slate-200 dark:divide-slate-700">
                    ${tableHeader(['Unit', 'Shift'])}
                    <tbody className="bg-white dark:bg-slate-800 divide-y divide-slate-200 dark:divide-slate-700">
                        ${listData.map((item, index) => {
                            if (!item) return null;
                            const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.unitName}`;
                            const hasNote = notes[noteKey];
                            return html`
                            <tr key=${`${item.unitName}-${index}`} onClick=${() => handleOpenModal('unit', item)} className="hover:bg-slate-50 dark:hover:bg-slate-700/50 cursor-pointer">
                                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-slate-900 dark:text-slate-100">
                                    <div className="flex items-center space-x-2">
                                        <span>${item.unitName}</span>
                                        ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400" />`}
                                    </div>
                                </td>
                                <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">${item.shift}</td>
                            </tr>
                        `})}
                    </tbody>
                </table>
            </div>
            <div className="space-y-4 sm:hidden">
                ${listData.map((item, index) => {
                    if (!item) return null;
                    const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.unitName}`;
                    const hasNote = notes[noteKey];
                    return html`
                        <div key=${`${item.unitName}-${index}`} onClick=${() => handleOpenModal('unit', item)} className="bg-white dark:bg-slate-800 rounded-lg p-4 shadow-md cursor-pointer">
                           <div className="flex justify-between items-center">
                                <div className="flex items-center space-x-2">
                                    <span className="font-bold text-slate-800 dark:text-slate-100">${item.unitName}</span>
                                    ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400" />`}
                                </div>
                                <span className="text-xs font-semibold text-slate-500 dark:text-slate-400 bg-slate-100 dark:bg-slate-700 px-2 py-1 rounded">${item.shift} Shift</span>
                           </div>
                        </div>
                    `
                })}
            </div>
        `;

        const renderDriverStatus = (listData, showShift = false) => html`
            <div className="overflow-x-auto hidden sm:block">
                <table className="min-w-full divide-y divide-slate-200 dark:divide-slate-700">
                    ${tableHeader(showShift ? ['Operator Name', 'Unit', 'Shift'] : ['Operator Name', 'Unit'])}
                     <tbody className="bg-white dark:bg-slate-800 divide-y divide-slate-200 dark:divide-slate-700">
                        ${listData.map((item, index) => {
                             if (!item || !item.driver) return null;
                             const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.driver.id}`;
                             const hasNote = notes[noteKey];
                             return html`
                            <tr key=${`${item.driver.id}-${index}`} onClick=${() => handleOpenModal('driver', item)} className="hover:bg-slate-50 dark:hover:bg-slate-700/50 cursor-pointer">
                                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-slate-900 dark:text-slate-100">
                                    <div className="flex items-center space-x-2">
                                        <span>${item.driver.name}</span>
                                        ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400" />`}
                                    </div>
                                </td>
                                <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">${item.driver.unit}</td>
                                ${showShift && html`<td className="px-6 py-4 whitespace-nowrap text-sm text-slate-500 dark:text-slate-300">${item.shift}</td>`}
                            </tr>
                        `})}
                    </tbody>
                </table>
            </div>
            <div className="space-y-4 sm:hidden">
                ${listData.map((item, index) => {
                    if (!item || !item.driver) return null;
                    const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.driver.id}`;
                    const hasNote = notes[noteKey];
                    return html`
                        <div key=${`${item.driver.id}-${index}`} onClick=${() => handleOpenModal('driver', item)} className="bg-white dark:bg-slate-800 rounded-lg p-4 shadow-md space-y-1 cursor-pointer">
                            <div className="flex items-center space-x-2">
                                <p className="font-bold text-slate-800 dark:text-slate-100">${item.driver.name}</p>
                                ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400" />`}
                            </div>
                            <p className="text-sm text-slate-600 dark:text-slate-300">${item.driver.unit}</p>
                            ${showShift && html`<p className="text-sm text-slate-500 dark:text-slate-400">Shift: ${item.shift}</p>`}
                        </div>
                    `
                })}
            </div>
        `;
        
        const lists = {
            'on_duty': renderDriverStatus(filteredData),
            'empty_units': renderEmptyUnits(filteredData),
            'breakdown': renderBreakdownUnits(filteredData),
            'rooster': renderDriverStatus(filteredData, true),
            'off': renderDriverStatus(filteredData, true),
            'induction': renderDriverStatus(filteredData, true),
        };
        return lists[activeDetailTab];
    };
    
    const equipmentTitle = useMemo(() => {
        switch(activeEquipment) {
            case 'dt': return 'Dump Truck';
            case 'excavator': return 'Excavator';
            case 'dozer': return 'Dozer';
            default: return 'Equipment';
        }
    }, [activeEquipment]);

    const detailTabs = [
        { key: 'on_duty', label: 'On Duty' },
        { key: 'empty_units', label: `${dailyData?.day.stats.equipmentLabel || 'Unit'} Kosong` },
        { key: 'breakdown', label: 'Unit Breakdown' },
        { key: 'rooster', label: 'Cuti Rooster' },
        { key: 'off', label: 'OFF' },
        { key: 'induction', label: 'Induksi' },
    ];
    
    const currentStats = activeShift === 'day' ? dailyData?.day.stats : dailyData?.night.stats;

    const onDutyIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth=${2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.653-.284-1.255-.758-1.685M3 12a9 9 0 0118 0v2c0 .653-.284 1.255-.758 1.685M3 12a9 9 0 0118 0-9 9 0 01-18 0z" /></svg>`;
    const emptyIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth=${2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
    const breakdownIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" /></svg>`;
    const spareIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth=${2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M15 21v-1a6 6 0 00-5.176-5.97M15 21h6m-6-1a6 6 0 00-9-5.197M15 21h-6a6 6 0 00-6-6v-1a6 6 0 0112 0v1zm0 0v-1a6 6 0 00-5.176-5.97m5.176 5.97A6 6 0 0121 15v1h-6m-6-1a6 6 0 016-6v-1a6 6 0 00-9 5.197m9-5.197a4 4 0 110-5.292" /></svg>`;

    const dashboardCards = [
        { title: "On Duty", value: currentStats?.onDutyCount || 0, icon: onDutyIcon, color: "bg-teal-500" },
        { title: `${currentStats?.equipmentLabel || 'Unit'} Kosong`, value: currentStats?.emptyCount || 0, icon: emptyIcon, color: "bg-red-500" },
        { title: "Unit Breakdown", value: currentStats?.breakdownCount || 0, icon: breakdownIcon, color: "bg-orange-500" },
        { title: "Operator Spare", value: currentStats?.availableSpares || 0, icon: spareIcon, color: "bg-green-500" },
    ];

    return html`
        <div className="flex min-h-screen font-sans text-slate-800 dark:text-slate-200">
            <${Sidebar} activeEquipment=${activeEquipment} onSelectEquipment=${handleSelectEquipment} />
            <main className="flex-1 p-4 sm:p-6 lg:p-8 overflow-y-auto pb-24 lg:pb-8">
                <div className="max-w-7xl mx-auto">
                    <header className="mb-8">
                         <div className="flex justify-between items-center">
                            <h1 className="text-3xl lg:text-4xl font-bold tracking-tight text-slate-900 dark:text-white">Manpower & ${equipmentTitle} Dashboard</h1>
                        </div>
                        <p className="mt-2 text-lg text-slate-600 dark:text-slate-400">Daily operational overview for workforce and vehicle availability.</p>
                    </header>

                    <${Calendar} selectedDate=${selectedDate} setSelectedDate=${setSelectedDate} daysWithNotes=${daysWithNotes} />
                    
                    <div className="mb-8">
                        <div className="flex space-x-2 bg-slate-200 dark:bg-slate-900/50 p-1 rounded-xl">
                            <button 
                                onClick=${() => setActiveShift('day')}
                                className=${`w-full font-semibold py-3 px-4 rounded-lg transition-colors duration-200 ${activeShift === 'day' ? 'bg-white dark:bg-slate-700 text-indigo-600 dark:text-indigo-400 shadow-md' : 'text-slate-600 dark:text-slate-300 hover:bg-white/50 dark:hover:bg-slate-800/50'}`}>
                                ☀️ Day Shift
                            </button>
                            <button 
                                onClick=${() => setActiveShift('night')}
                                className=${`w-full font-semibold py-3 px-4 rounded-lg transition-colors duration-200 ${activeShift === 'night' ? 'bg-white dark:bg-slate-700 text-indigo-600 dark:text-indigo-400 shadow-md' : 'text-slate-600 dark:text-slate-300 hover:bg-white/50 dark:hover:bg-slate-800/50'}`}>
                                🌙 Night Shift
                            </button>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                        ${dashboardCards.map(card => html`
                            <${DashboardCard}
                                key=${card.title}
                                title=${card.title}
                                value=${card.value}
                                icon=${card.icon}
                                color=${card.color}
                            />
                        `)}
                    </div>

                    <div className="bg-white dark:bg-slate-800/50 rounded-2xl shadow-lg">
                        <div className="border-b border-slate-200 dark:border-slate-700">
                            <nav className="-mb-px flex space-x-6 px-6 overflow-x-auto" aria-label="Tabs">
                                ${detailTabs.map(tab => html`
                                    <button
                                        key=${tab.key}
                                        onClick=${() => setActiveDetailTab(tab.key)}
                                        className=${`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm transition-colors ${
                                            activeDetailTab === tab.key
                                                ? 'border-indigo-500 text-indigo-600 dark:border-indigo-400 dark:text-indigo-400'
                                                : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300 dark:text-slate-400 dark:hover:text-slate-200 dark:hover:border-slate-500'
                                        }`}
                                    >
                                        ${tab.label}
                                    </button>
                                `)}
                            </nav>
                        </div>
                        <div className="p-4 border-b border-slate-200 dark:border-slate-700">
                            <div className="relative">
                                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <${SearchIcon} className="h-5 w-5 text-slate-400" />
                                </div>
                                <input
                                    type="text"
                                    value=${searchQuery}
                                    onChange=${e => setSearchQuery(e.target.value)}
                                    placeholder="Search by name or unit..."
                                    className="block w-full pl-10 pr-3 py-2 border border-slate-300 rounded-md leading-5 bg-white dark:bg-slate-700 dark:border-slate-600 dark:text-white placeholder-slate-400 focus:outline-none focus:placeholder-slate-500 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                />
                            </div>
                        </div>
                        <div className="p-2 sm:p-4">
                            ${renderList()}
                        </div>
                    </div>
                </div>
            </main>
            <${BottomNavBar} activeEquipment=${activeEquipment} onSelectEquipment=${handleSelectEquipment} />
            <${NoteModal}
                isOpen=${isModalOpen}
                onClose=${handleCloseModal}
                onSave=${handleSaveNote}
                target=${modalTarget}
                notes=${notes}
                selectedDate=${selectedDate}
            />
        </div>
    `;
};

const rootElement = document.getElementById('root');
const root = ReactDOM.createRoot(rootElement);
root.render(html`
  <${React.StrictMode}>
    <${App} />
  </${React.StrictMode}>
`);
