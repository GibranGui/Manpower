// Dependencies are loaded via <script> tags in index.html, creating global variables (React, ReactDOM, htm).
const html = htm.bind(React.createElement);
const { useState, useEffect, useMemo } = React;


// --- Data ---
const dtRawData = `1	R. MAMBI	HANVAN XCMG 51	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
2	M. ZAINATUL AGUNG	HANVAN XCMG 51	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
3	M. NORMAN HAKIM	HANVAN XCMG 55	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR
4	VIKI LIANDI	HANVAN XCMG 55	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D
5	HERMINTO. R	DT HANVAN 98	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
6	BINTARA PRIYANDI	DT HANVAN 98	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D
7	RIDHO ILLAFI SUKMA	DT HANVAN 99(BREAKDOWN)	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
8	RUDI HARTONO	DT HANVAN 99(BREAKDOWN)	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
9	TOUPIT ASMAN	DT HANVAN 100	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
10	ADIANTO	DT HANVAN 100	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N
11	TENGGO NOVRIAN	DT HANVAN 101	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
12	MINAL BAHRI	DT HANVAN 101	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
13	GUNDALA	DT HANVAN 102	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N
14	FITRI ARYA PUTRA	DT HANVAN 102	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
15	ADE KURNIAWAN	DT HANVAN 103	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
16	NANDA NOVIANDI	DT HANVAN 103	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N
17	KELVIN PRANATA	DT HANVAN 104	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
18	ZULFAHMI FERNANDO	DT HANVAN 104	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
19	OWEN RAHMADANI MAHE	DT HANVAN 105	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
20	DICKY PRANATA HS	DT HANVAN 105	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
21	SANDRA HALIYA PUTRA	DT HANVAN 188	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
22	ALEX TORNANDO	DT HANVAN 188	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
23	SUMARTO	DT HANVAN 189(BREAKDOWN)	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
24	MUJI SATRIA NOTO SUSEN	DT HANVAN 189(BREAKDOWN)	N	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N
25	UCI PURWANTO	DT HANVAN 190	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
26	DODI PRAYOGI	DT HANVAN 190	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
27	DOLI INDRA	DT HANVAN 191	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
28	FERRY ADRIAN	DT HANVAN 191	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
29	EGI WIRANTO	DT HANVAN 192	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
30	WAHYU IMAM MAULANA	DT HANVAN 192	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N
31	ARIA DEBIANTO TARIGAN	DT HANVAN 193	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
32	HARIONO	DT HANVAN 193	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
33	SADAM HUSEN	DT HANVAN 194	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
34	GUNAWAN MAHENDRA	DT HANVAN 194	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
35	HERMAN SAPUTRA	DT HANVAN 195	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
36	EGI APRILI MARTA	DT HANVAN 195	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
37	FAREL ANANDA PARINDRA	DT HANVAN 196(BREAKDOWN)	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
38	PERISTIAWAN	DT HANVAN 196(BREAKDOWN)	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
39	SUGIHARTO	DT HANVAN 197	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
40	JONI ARDILES	DT HANVAN 197	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
41	YOPI ILHAMI	DT HANVAN 198	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
42	PURWOKO	DT HANVAN 198	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
43	AL ZONIKA	DT HANVAN 199	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N
44	M. ILHAM SURYA WARDAN	DT HANVAN 199	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D
45	CHARLES BILLANDIS	DT HANVAN 200	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR
46	REDI SYAPUTRA	DT HANVAN 200	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
47	MUHAMMAD FAJAR AFIKI	DT HANVAN 201(BREAKDOWN)	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
48	AGAM PRAYUDI	DT HANVAN 201(BREAKDOWN)	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
49	RISKY TRY UTANI	DT HANVAN 202	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
50	SETIA BUDI	DT HANVAN 202	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
51	ASMAREKI	DT HANVAN 203	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
52	IRFAN ARIANDI	DT HANVAN 203	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR
53	ENGKI PANHOTEN	DT HANVAN 204	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
54	ANDI PRADANA	DT HANVAN 204	OFF	D	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D
55	PANCA SUKMA WARDI	DT HANVAN 205	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
56	EKO RIZALDI	DT HANVAN 205	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D
57	WAHYU RAMADAN	DT HANVAN 206	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
58	ROBBY NANDA SYAPUTRA	DT HANVAN 206	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR	CR	CR
59	HARMANCA	DT HANVAN 207	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	CR
60	DESRIANTO	DT HANVAN 207	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
61	M. RIZKI AKBAR	DT HANVAN 208	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
62	MUHAMMAD NUR SOFYAN	DT HANVAN 208	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
63	IWAN LUBIS	DT HANVAN 209	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
64	IWEN OGILVI SAPUTRA	DT HANVAN 209	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
65	DEPRIWAN	DT HANVAN 210	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
66	REDO ILAHI	DT HANVAN 210	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
67	RINALDI	DT HANVAN 211	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
68	APRIANDA MUTIYOVA	DT HANVAN 211	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
69	MHD ROZALI	DT HANVAN 212	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
70	SUYONO. P	DT HANVAN 212	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
71	YOGI DIKA PUTRA	DT HANVAN 213	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
72	HADIANTO	DT HANVAN 213	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR
73	YAN ALBERT	DT HANVAN 214	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR
74	GUSTI MAHENDRA	DT HANVAN 214	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
75	ZULFAHMI	DT HANVAN 215	N	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N
76	LUKMAN HAKIM ICHWAN	DT HANVAN 215	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
77	SUDARSO	DT HANVAN 216	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
78	ARI WIBOWO	DT HANVAN 216	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
79	AGRI DASLINO PRATAMA	DT HANVAN 217	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
80	HERCULES	DT HANVAN 217	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
81	ERIK USTRANI	DT HANVAN 218	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
82	ANDRE HASKOPER	DT HANVAN 218	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
83	CANDRA INDRA	DT HANVAN 219	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
84	PALMA	DT HANVAN 219	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
85	ARI YAHYA	DT HANVAN 220	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR
86	FAJRI ISLAMI	DT HANVAN 220	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
87	ANDIKA SAPUTRA	DT HANVAN 221	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
88	YOGI ANDRIAN	DT HANVAN 221	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
89	TASRIANTO	DT HANVAN 222	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D
90	RAHMAD DIANSAH	DT HANVAN 222	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
91	BOY DEPRAYANDI	DT HANVAN 223	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
92	GANDUNG HENDRIYAWAN	DT HANVAN 223	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
93	EDO RIO OKTARA	DT HANVAN 224	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
94	DIKA PRANATA	DT HANVAN 224	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
95	BAYU SYAHPUTRA	DT HANVAN 225	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR
96	SAPRIADI	DT HANVAN 225	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
97	SUPRIYADI	DT HANVAN 226	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR
98	OKI SAPUTRA	DT HANVAN 226	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
99	EDI SAPUTRA	DT HANVAN 227	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
100	HENGKI SUDRAJAT	DT HANVAN 227	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D
101	FARHAN NOVYANDRA	DT HANVAN 228	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D
102	ARBY RAMADHAN	DT HANVAN 228	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	N	N
103	JONI	DT HANVAN 229	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N
104	GALIH ARMANDO HR	DT HANVAN 229	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	N	N	N	OFF	D	D	D
105	KHAIRONI	DT HANVAN 230	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
106	KUSNEDI	DT HANVAN 230	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
107	ROY MARTHEN	DT HANVAN 231	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
108	POLMA SIJABAT	DT HANVAN 231	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
109	ISMAIL	DT HANVAN 232	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
110	PENI ANDIKA	DT HANVAN 232	CR	CR	CR	CR	I	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
111	MHD. DAI FASAID	DT HANVAN 233	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
112	AGUNG PRANATA	DT HANVAN 233	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
113	ENDANG KUSMA	DT HANVAN 234	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
114	DINO ISYAH PUTRA UTAM	DT HANVAN 234	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
115	ANDITO SAPUTRA	DT HANVAN 235	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR
116	ANDI IRAWAN	DT HANVAN 235	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
117	BANGSA PERANGIN-ANGIN	DT HANVAN 236(BREAKDOWN)	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR
118	RERI ANDRIONETA	DT HANVAN 236(BREAKDOWN)	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
119	BOKNER GALINGGING	DT HANVAN 237	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
120	GALLVIN CARLO	DT HANVAN 237	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF
121	SYAFII SIREGAR	DT HANVAN 238	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
122	RAMA DANI	DT HANVAN 238	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
123	RIKI SAPUTRA	DT HANVAN 239	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
124	SANDI WIBOWO	DT HANVAN 239	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
125	NOPRIANDI	QUESTER 10 (15) CWE 280(BREAKDOWN)	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
126	GENTA AULIA GUNTUR	QUESTER 10 (15) CWE 280(BREAKDOWN)	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
127	RONI SUPARLI	QUESTER 11 CWE 280	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
128	FAISAL AMRI	QUESTER 11 CWE 280	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
129	IPIN EFENDI	QUESTER 14 CWE 280	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D
130	PEJO DELPISA CANDRA	QUESTER 14 CWE 280	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
131	SARIKANDI	QUESTER 28 CWE 280(BREAKDOWN)	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	OFF
132	ADI ANUGRAH	QUESTER 28 CWE 280(BREAKDOWN)	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR
133	RENKI WIGUNA	QUESTER 29 CWE 280	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
134	DEDI SYAFRIADI	QUESTER 29 CWE 280	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
135	JUFRIL	QUESTER 31 CWE 280	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
136	DANIL MUSTAPA HARUN	QUESTER 31 CWE 280	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
137	JALPION	QUESTER 32 CWE 280	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
138	MUHAMMAD FAJRI AL MA	QUESTER 32 CWE 280	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
139	PIRDAUS	QUESTER 33 CWE 280	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
140	DIDIK HERMAWAN	QUESTER 33 CWE 280	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D
141	DANIEL SYAFIKRI	QUESTER 34 CWE 280	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
142	IKNU SETYAWAN	QUESTER 34 CWE 280	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
143	KEPRIANTO	QUESTER 35 CWE 280	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
144	ALDI PRAJANATA	QUESTER 35 CWE 280	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N
145	NASRIANDI	QUESTER 37 CWE 280(BREAKDOWN)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
146	REGI ARMI VOLANDRA	QUESTER 37 CWE 280(BREAKDOWN)	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
147	TRI SUSANTO	QUESTER 38 CWE 280	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D
148	ALFI ZULFAROLI	QUESTER 38 CWE 280	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
149	DEDI HENDRA	QUESTER 39 CWE 280	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
150	NANDO EKA PUTRA	QUESTER 39 CWE 280	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
151	ROBY KURNIADO	QUESTER 41 CWE 280	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
152	WIDI ASROFI	QUESTER 41 CWE 280	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N
153	RIO PEBRIAN	QUESTER 42  CWE 280	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
154	BENNY SAPUTRA	QUESTER 42  CWE 281	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
155	JOKO TRIANTO	QUESTER 44  CWE 280	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
156	DIAN DAFIT	QUESTER 44  CWE 280	I	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N
157	M. REJA	QUESTER 45  CWE 280	N	OFF	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	OFF	D	D	D	D
158	ALTASER	QUESTER 45  CWE 280	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N
159	PANDI ZIKRILLAH	QUESTER 46  CWE 280	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
160	RHADIUS PUTRA WIRA	QUESTER 46  CWE 280	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
161	ABIL JANUANDA RIZKY	QUESTER 47  CWE 280	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
162	ALIT PITOYO	QUESTER 47  CWE 280	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	N	N	OFF
163	BENITA INDRA	QUESTER 07 CWE 370	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N
164	FAISAL	QUESTER 07 CWE 370	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
165	ARGIANTO	QUESTER 17 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
166	PRIANDI RISKI	QUESTER 17 CWE 370	N	OFF	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D
167	WAWAN GUSTIAN	QUESTER 18 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
168	FITRA RAMADHAN	QUESTER 18 CWE 370	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
169	FERY ALDY YANSYA	QUESTER 19 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
170	IRWAN HIDAYAD	QUESTER 19 CWE 370	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
171	WISNU ADI PARNATA	QUESTER 20 CWE 370(BREAKDOWN)	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
172	HENDI AFRIKA	QUESTER 20 CWE 370(BREAKDOWN)	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
173	ARDIANTON	QUESTER 21 CWE 370	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
174	AHMAD CHAIRUL MUSTOP	QUESTER 21 CWE 370	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	CR	CR	CR
175	MAIRIZALDI	QUESTER 22 CWE 370	CR	CR	CR	CR	CR	CR	I	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
176	SEPTA NANDA PRAYOGA	QUESTER 22 CWE 370	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
177	DEDE WAHYUDI	QUESTER 76 CWE 370	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
178	ARTA DARMA SYAPUTRA	QUESTER 76 CWE 370	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
179	RONI SAPUTRA	QUESTER 78 CWE 370	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
180	RIDIANTO RODESKA	QUESTER 78 CWE 370	D	N	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR
181	MEGI RISMAYANTO	QUESTER 79 CWE 370	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
182	HENDRI	QUESTER 79 CWE 370	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
183	ASHABUL AIFANI	QUESTER 80 CWE 370	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
184	ANDRE ANDIKA RAMADAN	QUESTER 80 CWE 370	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR
185	ANTON ASPAPERA	QUESTER 81 CWE 370	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
186	JEMVORA EFIL BREN	QUESTER 81 CWE 370	CR	CR	CR	CR	CR	I	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
187	MUSTAFA RASYID	QUESTER 82 CWE 370	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	CR	CR	CR	CR	CR
188	HERIANTO	QUESTER 82 CWE 370	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
189	MALVIN RIFANDA POHAN	QUESTER 83 CWE 370	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
190	ALWIS JAYA	QUESTER 83 CWE 370	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
191	MARDIANTO	QUESTER 84 CWE 370	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
192	HELFI NANDA	QUESTER 84 CWE 370	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
193	EDY JULIWANTO S	QUESTER 85 CWE 370	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
194	PROPEL GANDI	QUESTER 85 CWE 370	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
195	OKI OKTANIO	QUESTER 106 CWE 370	CR	CR	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
196	RAHMAD GUNAWAN	QUESTER 106 CWE 370	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
197	SANDI BUDI SURYADI	QUESTER 107 CWE 370	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
198	NANDRO SAGITA	QUESTER 107 CWE 370	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
199	PRIMA MIDIONO	QUESTER 108 CWE 370	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
200	BUDI SARWONO	QUESTER 108 CWE 370	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
201	ADI KUSNADI	QUESTER 124 CWE 370	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
202	APENDI	QUESTER 124 CWE 370	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
203	YANDRA APRINALDI	QUESTER 125 CWE 370	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR
204	ROYNALDI	QUESTER 125 CWE 370	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
205	NURMAN	DT 03 ORANGE	N	N	N	N	N	N	OFF	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N
206	DEDE SUMANTRI	DT 03 ORANGE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
207	ALFIAN	DT 04 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N
208	YULIUS	DT 04 ORANGE	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
209	JOND ANDRI SYAPUTRA	DT 05 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
210	ROMA DANI	DT 05 ORANGE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
211	BOBI JASTRIADI	DT 63 ORANGE	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N
212	MANGARA TUA SIANTURI	DT 63 ORANGE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D
213	DITO PUTRA	DT 65 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR
214	ARLIS	DT 65 ORANGE	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
215	ENNO	DT 66 ORANGE	CR	CR	CR	I	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
216	NANDA ADITYA PRATAMA	DT 66 ORANGE	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
217	DEDI GUSTIAWAN	DT 67 ORANGE	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR
218	AMRIANTO	DT 67 ORANGE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
219	MERZA ADE PUTRA	DT 109 ORANGE	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	OFF	D	D	D	D	D
220	EGO SAPUTRA	DT 109 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
221	GIO ANTONI	DT 110 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
222	ANDRI	DT 110 ORANGE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
223	ARISMAN	DT 111 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
224	BORKAT SIREGAR	DT 111 ORANGE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR
225	M. ROBI YANTO	DT 112 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR
226	ARI KURNIAWAN	DT 112 ORANGE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
227	RANGGA SYAHPUTRA	DT 114 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N
228	RABILU SANDI	DT 114 ORANGE	D	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D
229	INDIKA BOBI PRATAMA	DT 115 ORANGE	CR	I	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
230	ANDIKA	DT 115 ORANGE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
231	LEARDO YOGI LABENDRA	DT 116 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
232	ANDI	DT 116 ORANGE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
233	SUROTO	DT 119 ORANGE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
234	PUR WANTO	DT 119 ORANGE	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
235	SLAMET	DT 120 ORANGE	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	D	N	N	CR	CR	CR
236	JULPAN	DT 120 ORANGE	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D
237	SUTRISNO	DT 121 ORANGE	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
238	GAPIS SAGITA	DT 121 ORANGE	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
239	RIFFANDI IHSAN	DT 122 ORANGE	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D
240	MUHAMMAD FAZAL KHAN	DT 122 ORANGE	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
241	BENI RAMADANI	DT HINO 01 (68)(BREAKDOWN)	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR
242	APRIYADI	DT HINO 01 (68)(BREAKDOWN)	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
243	HAMID	DT HINO 02 (69)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N
244	RAHMAT PRIADI	DT HINO 02 (69)	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D
245	SUWANDI HADI S	DT HINO 03 (70)	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
246	MUHAMMAD FAHREZA AK	DT HINO 03 (70)	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
247	DICKY RAMADHANI	DT HINO 05 (72)	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR
248	TRI SEPRINALDI	DT HINO 05 (72)	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
249	AHMAD SLAMED	DT FIGHTER 73	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
250	MUKRI INDRA SAPUTRA	DT FIGHTER 73	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
251	RISKI RAMADANI	DT FIGHTER 74	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
252	ARIF SYAHFRUDIN	DT FIGHTER 74	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
253	DONES MARTHA ZULPERLI	DT FIGHTER 75(BREAKDOWN)	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
254	HADI KESUMA	DT FIGHTER 75(BREAKDOWN)	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	CR	CR	CR	CR	CR
255	RANGGA APRIANZA	DT MERCHY 27	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
256	JHONATAN YESA PUTRA	DT MERCHY 27	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
257	MUHAMMAD AMIN	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
258	SURIANTO	DRIVER DT SPARE	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
259	ASPARAINI	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
260	BERKAH ALHADI. S	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
261	OCTO GANDA MARTUA	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
262	SADRI RAMADANI	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
263	NOPRI NADA SAPUTRA	DRIVER DT SPARE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
264	WIDI KURNIAWAN	DRIVER DT SPARE	CR	CR	I	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
265	WILLIE HARYAJI MOES	DRIVER DT SPARE	CR	I	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
266	PENI ERWANDI	DRIVER DT SPARE	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
267	NANDA SYAHPUTRA	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
268	RANDA	DRIVER DT SPARE	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
269	BOBI ARTANTO	DRIVER DT SPARE	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
270	EKA KUSDIANTO	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
271	GRIMALDI	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
272	REKI HERDANTONI	DRIVER DT SPARE	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
273	AGUNG SUGIHARTO	DRIVER DT SPARE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	CR
274	ANGGA ADI PUTRA	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
275	MUHAMMAD YANI	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
276	MARLANI	DRIVER DT SPARE	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
277	MASDIANSYAH	DRIVER DT SPARE	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N
278	ARISMAN. J	DRIVER DT SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR
279	RIO RAFLES SINAGA	DRIVER DT SPARE	OFF	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N
280	DIO SYAHPUTRA	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N
281	SIWIN CANIAGO	DRIVER DT SPARE	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	OFF	D	D	D	D	D
282	IRWAN	DRIVER DT SPARE	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N
283	LUTFI ANDRIANTO	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D
284	DENAS ANDIKA ROSZI	DRIVER DT SPARE	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N
285	VITO PRASETYO	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N
286	SELAMET	DRIVER DT SPARE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR
287	HANNA SETIA GRAHAFFY	DRIVER DT SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR
288	NANANG MAULANA	DRIVER DT SPARE	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR
289	ANDIKA ARDIAN	DRIVER DT SPARE	D	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N
290	INDRA BUANA	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D
291	ALDONI CANDRA	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	CR	CR	CR	CR
292	JAMAL	DRIVER DT SPARE	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR
293	MIONO WIBOWO	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
294	JHONI ALPUTRA	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
295	RANGGA SENARU	DRIVER DT SPARE	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
296	KHAIRUL	DRIVER DT SPARE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
297	ERISON	DRIVER DT SPARE	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
298	JODI WINALDO	DRIVER DT SPARE	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N
299	RIO AFRIADI	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
300	SUKMA MUHARIANTO	DRIVER DT SPARE	D	D	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
301	ARI PRA SATIO	DRIVER DT SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
302	BUDIMAN MARPAUNG	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
303	SOPIAN HADI	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
304	HENDI JAI	DRIVER DT SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
305	YOGI SABRAN HUDA	DRIVER DT SPARE	N	N	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
306	MISGIADI	DRIVER DT SPARE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
307	EKA NOPRIANTO	DRIVER DT SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
308	BILLY EKA SUKARNA	DRIVER DT SPARE	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
309	ANDI SUSANTO	DRIVER DT SPARE	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
310	JACKSON PARULIAN SITINJ	DRIVER DT SPARE	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	N	N	N	N	N
311	ANTONI	DRIVER DT SPARE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
312	ALAN EFENDI	DRIVER DT SPARE	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
313	DONI SUSANTO	DRIVER DT SPARE	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
314	RIKI SAPUTRA  2	DRIVER DT SPARE	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF
315	AFRIANSYAH	DRIVER DT SPARE	N	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D
316	JAMALUDIN SINAGA	DRIVER DT SPARE	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N`;

const excavatorRawData = `1	ANDIKA PRADIFTA	EXCAVATOR 402	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
2	SUMPENA ISKANDAR	EXCAVATOR 402	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
3	DONNY MERDAHADI	EXCAVATOR 404	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
4	WAHYUDI HERPANI	EXCAVATOR 404	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D
5	MULYANTO	EXCAVATOR 405	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N
6	AGUS FITRIAWAN	EXCAVATOR 405	OFF	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
7	ANDI KURNIAWAN	EXCAVATOR 406	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
8	MARDIANSYAH	EXCAVATOR 406	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
9	FEBRY SAPUTRA	EXCAVATOR 407	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
10	FAIZ SIROJUDIN	EXCAVATOR 407	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N
11	ARDILES	EXCAVATOR 408	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
12	MOREL	EXCAVATOR 408	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N
13	NURDANA	EXCAVATOR 409	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
14	IKHSAN	EXCAVATOR 409	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR
15	M. IKSAN	EXCAVATOR 410	N	OFF	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	OFF	D
16	HARNO	EXCAVATOR 410	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
17	REFFI ISMERLIND	EXCAVATOR 411	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
18	ALKADIF ISMAIL	EXCAVATOR 411	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
19	ANDES	EXCAVATOR 412	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
20	EDY WARDIAN	EXCAVATOR 412	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
21	FAHROZI SAPUTRA	EXCAVATOR 414	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
22	DONNI OKTANDI	EXCAVATOR 414	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N
23	EMDA MARYOGI	EXCAVATOR 416	CR	CR	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
24	ARIS ADINATA	EXCAVATOR 416	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	OFF	D	D	D	D	D	D	D	N	N	N
25	JEFRINALDI	EXCAVATOR 425	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
26	AKIMIS	EXCAVATOR 425	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR
27	JEMSTAR SIHOMBING	EXCAVATOR 426	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
46	IRWAN	EXCAVATOR 426	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	CR	CR	CR
29	LENDRA	EXCAVATOR 427	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
30	ACCEPT LEAFY	EXCAVATOR 427	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N
31	MUHAMMAD SYAPRIZAL	EXCAVATOR 428	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N
32	JATRIADIN	EXCAVATOR 428	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
33	SABARIONO	EXCAVATOR 429	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
34	GUSNI SYAWAL	EXCAVATOR 429	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	CR	CR	CR
35	BOY SHANDI	EXCAVATOR 430	I	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
36	DANI S. SITANGGANG	EXCAVATOR 430	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
37	FERNANDO SINAGA	EXCAVATOR 431	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D
38	IJON P SIMARMATA	EXCAVATOR 431	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
39	HENDRIK	EXCAVATOR 432	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
40	RAMLAN	EXCAVATOR 432	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
41	SAFRIADI	EXCAVATOR 433	OFF	D	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF
42	ARDIANTO SITOMPUL	EXCAVATOR 433	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	CR	CR	CR	CR
43	DEDEK SETIAWAN	EXCAVATOR 434	I	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
44	RIDUAN M.TOGATOROP	EXCAVATOR 434	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
45	SUWITO	EXCAVATOR 506	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
28	ANGGI JUANDA	EXCAVATOR 506	N	N	N	N	OFF	D	D	D	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N
47	AGUS SUSANTO	EXCAVATOR 507	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR
48	A YANI MILBAR	EXCAVATOR 507	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
49	SYAHRI ROMADON	EXCAVATOR 508	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
50	OCTA MAULANA SYAHPUTRA	EXCAVATOR 508	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
51	ANDREAS HARAS	EXCAVATOR SPARE	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	N	N	N	CR	CR	CR	CR
52	SARJA	EXCAVATOR SPARE	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
53	FEDO ALDI AMBARITA	EXCAVATOR SPARE	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N
54	JHONSON ADI PUTRA SINAGA	EXCAVATOR SPARE	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D
55	EDI WASITO	EXCAVATOR SPARE	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	CR	CR	CR	CR	CR	CR
56	HERIYANTO SIHOMBING	EXCAVATOR SPARE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	CR
57	WAHYU SAPUTRA	EXCAVATOR SPARE	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D
58	FIRMAN SYARIF	EXCAVATOR SPARE	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N
59	BAMBANG SUTRISNO	EXCAVATOR SPARE	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N
60	SAHAT SIREGAR	EXCAVATOR SPARE	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	CR	CR
61	JON HENRI HALOHO	EXCAVATOR SPARE	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
62	MUHAMMAD IQBAL.M	EXCAVATOR SPARE	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N
63	SANHERIB SITOMPUL	EXCAVATOR SPARE	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N
64	SURIYANTO	EXCAVATOR SPARE	CR	CR	I	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
65	AMINULLAH HASIBUAN	EXCAVATOR SPARE	D	D	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N
66	EDWARD HAKIM	EXCAVATOR SPARE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
67	HERIANTO	EXCAVATOR SPARE	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
68	ERWIN SAPUTRA	EXCAVATOR SPARE	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N
69	MARWAN	EXCAVATOR SPARE	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N
70	ASNAM	EXCAVATOR SPARE	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF`;

const dozerRawData = `1	ROKI HERMAWAN	DZ KOMATSU 11	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N
2	AREA OKTA MIRANDA	DZ KOMATSU 11	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
3	SYAHRUL SIGALINGGING	DZ KOMATSU 13	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N
4	GOGON S	DZ KOMATSU 13	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
5	YUDI YANTO	DZ KOMATSU 08	D	D	D	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N	N	N
6	SURIYONO	DZ KOMATSU 08	N	N	N	OFF	D	D	D	D	D	N	N	N	N	OFF	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
7	HENDRA GUNAWAN	DZ KOMATSU 30	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
8	KIKI ANDRIADI	DZ KOMATSU 30	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
9	DARYANTO	DZ KOMATSU 10 (STOKFILE)	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N
10	ENCEP SUBARNA	DZ KOMATSU 10 (STOKFILE)	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF	D	D
11	RIKI HARTONO	DZ KOMATSU 15	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	N	N	N	N	N
12	SATINO	DZ KOMATSU 15	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	N	N	N	N	OFF	D	D	D	D	D
13	HENDRIKO ISKANDAR	DZ KOMATSU 19	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D
14	AJAT SUDRAJAT	DZ KOMATSU 19	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	CR	CR	CR	CR	CR	CR	CR	CR	CR
15	SUTRIONO	DZ KOMATSU 29	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
16	HARIS ISKANDAR	DZ KOMATSU 29	I	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D
17	SELAMAT RIYANTO	DZ KOMATSU 33	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D
18	M. ISYA	DZ KOMATSU 33	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I
19	YOSSY GUSMAN	DZ KOMATSU 34	D	N	N	N	N	N	N	N	OFF	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	N	N	N	N	N	N
20	YOGA TEDI PRATAMA	DZ KOMATSU 34	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
21	EKA SRIL	DZ KOMATSU 35	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D
22	MELDI MUZALDA ALFA	DZ KOMATSU 35	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N
23	SURIANTO	DZ KOMATSU 36	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D
24	SURATNO	DZ KOMATSU 36	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
25	FERYANTO SIRAIT	DZ KOMATSU 37	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N
26	SULTAN SIPAHUTAR	DZ KOMATSU 37	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D
27	IGO PRASETYO	DZ LIU GONG 02	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D
28	ERJENCES SINAGA	DZ LIU GONG 03	D	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	D
29	YOGA ASTIKA	DZ LIU GONG 03	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	CR	CR	CR	CR	CR	CR	CR	CR
30	DEDI HENDRA	DZ LIU GONG 04	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	CR	CR	CR
31	RAHMAN AFRIADI	DZ LIU GONG 04	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D
32	DEDI KANDRA	DZ SHANTUY 07	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D
33	ADI PRAWIBOWO	DZ SHANTUY 07	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N
34	KHOIRUL SALEH LUBIS	DZ SHANTUI 26	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N
35	ADRIL ANDONI	DZ SHANTUI 26	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR
36	JERRY YAN MACHER	SPARE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	CR	CR	CR
37	JEFRI MIDIANTO	SPARE	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF
38	JEFFRI ARDIANSYAH	SPARE	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D
39	NURIDIN	SPARE	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D
40	ZULKIFLI	SPARE	CR	I	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N
41	FENDY HALOMON SIREG	SPARE	D	D	D	N	N	N	N	N	N	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	CR	I	D	D	D	D	D	D	D	N	N
42	FAJAR NURHADI	SPARE	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	CR	CR	CR	CR
43	EKA SAPUTRA ARITONA	SPARE	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF
44	RONI DAMATIUS	SPARE	N	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N
45	SELAMET ANUGRAH ADI	SPARE	N	N	N	OFF	D	D	D	D	D	D	D	D	N	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N	N	N	OFF
46	MIFTACHUL JINAN	SPARE	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N	N	N	OFF	D	D	D	D	D	D	N	N	N
47	BAHARUDDIN	SPARE	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	D	D	N	N	N	N	N	N	OFF	D	D	D	D	D	N	N	N`;


// --- Data Parsing Logic ---
const parseManpowerData = (dataString, equipmentType) => {
    const lines = dataString.trim().split('\n');
    const drivers = [];

    lines.forEach((line, index) => {
        try {
            const trimmedLine = line.trim();
            if (!trimmedLine) return;
            const parts = trimmedLine.split('\t');
            if (parts.length < 4) {
                console.warn(`Skipping malformed line ${index + 1}: not enough tab-separated parts. Line: "${line}"`);
                return;
            }

            const id = parseInt(parts[0], 10);
            const name = parts[1].trim();
            const rawUnit = parts[2].trim();
            const isBreakdown = rawUnit.toUpperCase().includes('(BREAKDOWN)');
            const unit = rawUnit.replace(/\(BREAKDOWN\)/ig, '').trim();
            const dailyStatuses = parts.slice(3).map(s => s.trim());
            
            if (isNaN(id) || !name || !unit) {
                console.warn(`Skipping line with invalid data (ID, name, or unit) ${index + 1}: "${line}"`);
                return;
            }

            drivers.push({ id, name, unit, isBreakdown, dailyStatuses, type: equipmentType });

        } catch (error) {
            console.error(`Failed to parse line ${index + 1}: "${line}"`, error);
        }
    });
    return drivers;
};


// --- Calendar Helpers ---
const getDaysInMonth = (year, month) => {
    return new Date(year, month + 1, 0).getDate();
};
const getFirstDayOfMonth = (year, month) => {
    return new Date(year, month, 1).getDay();
};


// --- Icon Components ---
const DumpTruckIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M20.5 13.5c-.827 0-1.5.673-1.5 1.5s.673 1.5 1.5 1.5 1.5-.673 1.5-1.5-.673-1.5-1.5-1.5zm-11 0c-.827 0-1.5.673-1.5 1.5s.673 1.5 1.5 1.5 1.5-.673 1.5-1.5-.673-1.5-1.5-1.5zm11.5-1.5h-1.25l-2.071-4.143c-.221-.442-.684-.724-1.179-.724h-4c-.495 0-.958.282-1.179.724l-2.071 4.143h-2.25c-2.481 0-4.5 2.019-4.5 4.5v.5c0 .552.448 1 1 1h1c.552 0 1-.448 1-1v-.5c0-1.378 1.121-2.5 2.5-2.5h1.25l.25 1h11l.25-1h2.25c.552 0 1 .448 1 1s-.448 1-1 1h-12.5c-.276 0-.5.224-.5.5s.224.5.5.5h12.5c1.654 0 3-1.346 3-3v-1.5c0-.827-.673-1.5-1.5-1.5z"/></svg>
`;

const ExcavatorIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M22 18v-2c0-1.103-.897-2-2-2h-2.132c-.347-1.183-1.01-2.24-1.868-3.131v-2.869h1c.552 0 1-.449 1-1s-.448-1-1-1h-3c-.552 0-1 .449-1 1s.448 1 1 1h1v3.586c-1.481.565-2.529 1.954-2.71 3.414h-7.29c-.552 0-1 .449-1 1s.448 1 1 1h7.404c.062.531.251 1.031.529 1.475-.246.331-.443.714-.572 1.137-.428.169-.824.419-1.161.732-1.268 1.134-2.016 2.753-2.193 4.51l-1.007.144c-.53.076-.921.564-.845 1.094.076.53.564.921 1.094.845l1.007-.144c.221-1.954 1.126-3.729 2.596-5.025.27-.241.561-.46.867-.652.203.853.579 1.64 1.082 2.308.209.277.525.449.869.449h5c.552 0 1-.449 1-1s-.448-1-1-1h-4.631c-.287-.371-.52-.779-.691-1.213.626-.523 1.128-1.211 1.455-1.995.342-.054.686-.092 1.037-.092h2c1.103 0 2 .897 2 2v2h2c.552 0 1-.449 1-1s-.448-1-1-1h-1zm-19 2c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z"/></svg>
`;

const DozerIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M24 16.5c0-.827-.673-1.5-1.5-1.5h-19c-.827 0-1.5.673-1.5 1.5v.5c0 1.654 1.346 3 3 3h16c1.654 0 3-1.346 3-3v-.5zm-14.5-1.5c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5zm-5 0c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5zm19.5-1c0-.462-.321-.853-.759-.968-1.054-.275-2.224-1.243-2.241-1.26l-3-2.25c-.496-.372-1.18-.372-1.678 0l-3 2.25c-.017.017-1.187.985-2.241 1.26-.438.115-.759.507-.759.968v1h14v-1zm-4.75-5.25c-.219-.344-.573-.564-.961-.591-1.054-.076-1.559-.851-1.58-.875l-1-1.25c-.244-.305-.63-.484-1.039-.484s-.795.179-1.039-.484l-1 1.25c-.021.024-.526.799-1.58.875-.388.027-.742.247-.961.591-.321.505-.221 1.17.24 1.547l5 3.75c.244.183.56.278.88.278s.636-.095.88-.278l5-3.75c.461-.377.562-1.042.24-1.547z"/></svg>
`;

const NoteIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
        <path d="M5.433 13.917l1.262-3.155A4 4 0 017.58 9.42l6.92-6.918a2.121 2.121 0 013 3l-6.92 6.918c-.383.383-.84.685-1.343.886l-3.154 1.262a.5.5 0 01-.65-.65z" />
        <path d="M3.5 5.75c0-.69.56-1.25 1.25-1.25H10A.75.75 0 0010 3H4.75A2.75 2.75 0 002 5.75v9.5A2.75 2.75 0 004.75 18h9.5A2.75 2.75 0 0017 15.25V10a.75.75 0 00-1.5 0v5.25c0 .69-.56 1.25-1.25 1.25h-9.5c-.69 0-1.25-.56-1.25-1.25v-9.5z" />
    </svg>
`;

const SearchIcon = ({ className }) => html`
    <svg className=${className} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2">
        <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
    </svg>
`;

// --- UI Components ---
const Sidebar = ({ activeEquipment, onSelectEquipment }) => {
    const navItems = [
        { key: 'dt', label: 'Dump Truck', icon: DumpTruckIcon },
        { key: 'excavator', label: 'Excavator', icon: ExcavatorIcon },
        { key: 'dozer', label: 'Dozer', icon: DozerIcon },
    ];

    return html`
        <aside className="w-64 bg-white dark:bg-slate-800/50 p-4 flex-col flex-shrink-0 shadow-lg hidden lg:flex">
            <div className="text-2xl font-bold text-slate-900 dark:text-white mb-8">
                Equipment
            </div>
            <nav className="flex flex-col space-y-2">
                ${navItems.map(item => html`
                    <button
                        key=${item.key}
                        onClick=${() => onSelectEquipment(item.key)}
                        className=${`flex items-center space-x-3 p-3 rounded-lg text-left font-semibold transition-colors duration-200 ${
                            activeEquipment === item.key
                                ? 'bg-indigo-500 text-white shadow-md'
                                : 'text-slate-600 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-700/50'
                        }`}
                    >
                        <${item.icon} className="w-6 h-6" />
                        <span>${item.label}</span>
                    </button>
                `)}
            </nav>
        </aside>
    `;
};

const BottomNavBar = ({ activeEquipment, onSelectEquipment }) => {
    const navItems = [
        { key: 'dt', label: 'Dump Truck', icon: DumpTruckIcon },
        { key: 'excavator', label: 'Excavator', icon: ExcavatorIcon },
        { key: 'dozer', label: 'Dozer', icon: DozerIcon },
    ];

    return html`
        <nav className="lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-slate-800 border-t border-slate-200 dark:border-slate-700 shadow-t-lg z-40">
            <div className="flex justify-around items-center h-16">
                 ${navItems.map(item => html`
                    <button
                        key=${item.key}
                        onClick=${() => onSelectEquipment(item.key)}
                        className=${`flex flex-col items-center justify-center w-full h-full transition-colors duration-200 ${
                             activeEquipment === item.key
                                ? 'text-indigo-600 dark:text-indigo-400'
                                : 'text-slate-500 dark:text-slate-400 hover:text-indigo-500'
                        }`}
                    >
                        <${item.icon} className="w-6 h-6 mb-1" />
                        <span className="text-xs font-medium">${item.label}</span>
                    </button>
                `)}
            </div>
        </nav>
    `;
}

const Calendar = ({ selectedDate, setSelectedDate, daysWithNotes }) => {
    // For this app, we are locked to September 2025 as per the data
    const displayYear = 2025;
    const displayMonth = 9; // September is month 8 (0-indexed)

    const monthName = new Date(displayYear, displayMonth).toLocaleString('default', { month: 'long' });
    const daysInMonth = getDaysInMonth(displayYear, displayMonth);
    const firstDay = getFirstDayOfMonth(displayYear, displayMonth);

    const today = new Date();
    const isCurrentMonth = today.getFullYear() === displayYear && today.getMonth() === displayMonth;
    
    const days = Array.from({ length: daysInMonth }, (_, i) => i + 1);
    const emptyDays = Array.from({ length: firstDay });

    const handleDayClick = (day) => {
        setSelectedDate(new Date(displayYear, displayMonth, day));
    };
    
    return html`
        <div className="bg-white dark:bg-slate-800/50 p-4 sm:p-6 rounded-2xl shadow-lg mb-8">
            <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-semibold text-slate-800 dark:text-white">${monthName} ${displayYear}</h3>
            </div>
            <div className="grid grid-cols-7 gap-1 text-center text-sm">
                ${['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => html`
                    <div key=${day} className="font-medium text-slate-500 dark:text-slate-400 py-2">${day.slice(0,2)}</div>
                `)}
                ${emptyDays.map((_, index) => html`<div key=${`empty-${index}`} />`)}
                ${days.map(day => {
                    const isSelected = selectedDate.getDate() === day && selectedDate.getMonth() === displayMonth && selectedDate.getFullYear() === displayYear;
                    const isToday = isCurrentMonth && today.getDate() === day;
                    
                    const currentDateStr = new Date(displayYear, displayMonth, day).toISOString().split('T')[0];
                    const hasNote = daysWithNotes.has(currentDateStr);

                    const buttonClasses = `w-10 h-10 flex items-center justify-center rounded-full transition-colors duration-200 font-medium relative
                        ${isSelected ? 'bg-indigo-500 text-white shadow-lg' : ''}
                        ${!isSelected && isToday ? 'text-indigo-600 dark:text-indigo-400 ring-2 ring-indigo-300' : ''}
                        ${!isSelected ? 'hover:bg-slate-100 dark:hover:bg-slate-700' : ''}
                    `;
                    return html`
                        <div key=${day} className="flex justify-center items-center">
                            <button onClick=${() => handleDayClick(day)} className=${buttonClasses}>
                                ${day}
                                ${hasNote && html`<div className="absolute bottom-1.5 w-1.5 h-1.5 bg-indigo-400 dark:bg-indigo-500 rounded-full"></div>`}
                            </button>
                        </div>
                    `;
                })}
            </div>
        </div>
    `;
};


const StatusBadge = ({ status }) => {
    const statusStyles = {
        D: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
        N: 'bg-sky-100 text-sky-800 dark:bg-sky-900 dark:text-sky-300',
        CR: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',
        OFF: 'bg-slate-200 text-slate-800 dark:bg-slate-700 dark:text-slate-300',
        I: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',
    };
    const defaultStyle = 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';
    return html`
        <span className=${`px-3 py-1 text-xs font-semibold leading-5 rounded-full ${statusStyles[status] || defaultStyle}`}>
            ${status}
        </span>
    `;
};

const DashboardCard = ({ title, value, icon, color }) => html`
    <div className="bg-white dark:bg-slate-800 p-6 rounded-2xl shadow-lg flex items-center space-x-4 transition-transform hover:scale-105">
        <div className=${`p-3 rounded-xl ${color}`}>
            ${icon}
        </div>
        <div>
            <p className="text-sm font-medium text-slate-500 dark:text-slate-400">${title}</p>
            <p className="text-3xl font-bold text-slate-800 dark:text-slate-100">${value}</p>
        </div>
    </div>
`;

const NoteModal = ({ isOpen, onClose, onSave, target, notes, selectedDate }) => {
    if (!isOpen) return null;

    const [noteText, setNoteText] = useState('');

    const noteKey = `${selectedDate.toISOString().split('T')[0]}-${target.id}`;

    useEffect(() => {
        setNoteText(notes[noteKey] || '');
    }, [isOpen, target, notes, noteKey]);

    const handleSave = () => {
        onSave(noteKey, noteText);
    };

    return html`
        <div className="fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4 backdrop-blur-sm" onClick=${onClose}>
            <div className="bg-white dark:bg-slate-800 rounded-2xl shadow-xl w-full max-w-md p-6" onClick=${e => e.stopPropagation()}>
                <div className="flex justify-between items-center mb-4">
                    <h2 className="text-xl font-bold text-slate-900 dark:text-white">Add/Edit Note</h2>
                    <button onClick=${onClose} className="text-slate-400 hover:text-slate-600 dark:hover:text-white">
                        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                    </button>
                </div>
                <div className="mb-4">
                    <p className="text-sm text-slate-500 dark:text-slate-400">For: <span className="font-semibold text-slate-700 dark:text-slate-200">${target.name}</span></p>
                    <p className="text-sm text-slate-500 dark:text-slate-400">Date: <span className="font-semibold text-slate-700 dark:text-slate-200">${selectedDate.toLocaleDateString()}</span></p>
                </div>
                <textarea
                    value=${noteText}
                    onChange=${e => setNoteText(e.target.value)}
                    placeholder="Enter task or note here..."
                    className="w-full h-32 p-3 border border-slate-300 dark:border-slate-600 rounded-lg bg-slate-50 dark:bg-slate-700 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition"
                ></textarea>
                <div className="mt-6 flex justify-end space-x-3">
                    <button onClick=${onClose} className="px-4 py-2 rounded-lg text-sm font-semibold bg-slate-100 hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-200 transition">Cancel</button>
                    <button onClick=${handleSave} className="px-4 py-2 rounded-lg text-sm font-semibold bg-indigo-500 hover:bg-indigo-600 text-white transition shadow">Save Note</button>
                </div>
            </div>
        </div>
    `;
};

// --- Main Application Component ---
const App = () => {
    const [allData, setAllData] = useState({ drivers: [], units: [], spareDrivers: [] });
    
    const getInitialDate = () => {
        // Create a date object based on the current time in Asia/Jakarta
        const jakartaDate = new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' }));

        // The provided data is for September 2025 (month index 8)
        const dataYear = 2025;
        const dataMonth = 9; 

        // Check if the current Jakarta date is within the month of the available data
        if (jakartaDate.getFullYear() === dataYear && jakartaDate.getMonth() === dataMonth) {
            return jakartaDate;
        }

        // If not, default to the first day of the data's month
        return new Date(dataYear, dataMonth, 1);
    };
    const [selectedDate, setSelectedDate] = useState(getInitialDate());

    const [activeShift, setActiveShift] = useState('day');
    const [activeDetailTab, setActiveDetailTab] = useState('on_duty');
    const [activeEquipment, setActiveEquipment] = useState('dt');
    
    const [notes, setNotes] = useState({});
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [modalTarget, setModalTarget] = useState(null); // { type, id, name }
    const [searchQuery, setSearchQuery] = useState('');

    useEffect(() => {
        const dtDrivers = parseManpowerData(dtRawData, 'dt');
        const excavatorDrivers = parseManpowerData(excavatorRawData, 'excavator');
        const dozerDrivers = parseManpowerData(dozerRawData, 'dozer');
        const parsedDrivers = [...dtDrivers, ...excavatorDrivers, ...dozerDrivers];

        const regularDrivers = parsedDrivers.filter(d => !d.unit.toUpperCase().includes('SPARE'));
        const currentSpareDrivers = parsedDrivers.filter(d => d.unit.toUpperCase().includes('SPARE'));

        const unitsMap = new Map();
        regularDrivers.forEach(driver => {
            const existing = unitsMap.get(driver.unit) || [];
            unitsMap.set(driver.unit, [...existing, driver]);
        });

        const unitsArray = Array.from(unitsMap.values())
            .filter(drivers => drivers.length > 0)
            .map(drivers => {
                const unitName = drivers[0].unit;
                const upperUnitName = unitName.toUpperCase();
                const isBreakdown = drivers[0].isBreakdown;
                let type = 'dt';
                if (upperUnitName.includes('EXCAVATOR')) type = 'excavator';
                else if (upperUnitName.includes('DOZER') || upperUnitName.includes('DZ')) type = 'dozer';
                return { name: unitName, drivers, type, isBreakdown };
            });
        
        setAllData({ drivers: parsedDrivers, units: unitsArray, spareDrivers: currentSpareDrivers });
    }, []);
    
    useEffect(() => {
        setActiveDetailTab('on_duty');
        setSearchQuery('');
    }, [activeShift, activeEquipment]);

    useEffect(() => {
        setSearchQuery('');
    }, [activeDetailTab]);

    const handleOpenModal = (type, item) => {
        const target = type === 'driver'
            ? { id: item.driver.id, name: item.driver.name, type: 'driver' }
            : { id: item.unitName, name: item.unitName, type: 'unit' };
        setModalTarget(target);
        setIsModalOpen(true);
    };

    const handleCloseModal = () => {
        setIsModalOpen(false);
        setModalTarget(null);
    };

    const handleSaveNote = (noteKey, noteText) => {
        setNotes(prevNotes => {
            const newNotes = { ...prevNotes };
            if (noteText.trim()) {
                newNotes[noteKey] = noteText.trim();
            } else {
                delete newNotes[noteKey]; // Remove note if empty
            }
            return newNotes;
        });
        handleCloseModal();
    };
    
    const handleSelectEquipment = (equipment) => {
        setActiveEquipment(equipment);
    };

    const { drivers, units, spareDrivers } = useMemo(() => {
        const filteredDrivers = allData.drivers.filter(d => d.type === activeEquipment);
        const filteredSpareDrivers = allData.spareDrivers.filter(d => d.type === activeEquipment);
        const filteredUnits = allData.units.filter(u => u.type === activeEquipment);
        return { drivers: filteredDrivers, units: filteredUnits, spareDrivers: filteredSpareDrivers };
    }, [allData, activeEquipment]);

    const dailyData = useMemo(() => {
        const dayIndex = selectedDate.getDate() - 1;
        if (dayIndex < 0 || dayIndex > 30) return null;

        const onDutyDay = [];
        const onDutyNight = [];
        const onRooster = [];
        const onOff = [];
        const onInduction = [];
        const breakdownUnitsDay = [];
        const breakdownUnitsNight = [];
        
        const spareOnDutyDay = spareDrivers
            .filter(d => d.dailyStatuses[dayIndex] === 'D')
            .map(driver => ({ driver, shift: 'Day' }));
    
        const spareOnDutyNight = spareDrivers
            .filter(d => d.dailyStatuses[dayIndex] === 'N')
            .map(driver => ({ driver, shift: 'Night' }));

        drivers.forEach(driver => {
            const status = driver.dailyStatuses[dayIndex];
            
            if (status === 'D') {
                onDutyDay.push({ driver, shift: 'Day' });
                if (driver.isBreakdown) {
                    spareOnDutyDay.push({ driver, shift: 'Day' });
                }
            } else if (status === 'N') {
                onDutyNight.push({ driver, shift: 'Night' });
                if (driver.isBreakdown) {
                    spareOnDutyNight.push({ driver, shift: 'Night' });
                }
            } else if (status === 'CR') {
                onRooster.push({ driver });
            } else if (status === 'OFF') {
                onOff.push({ driver });
            } else if (status === 'I') {
                onInduction.push({ driver });
            }
        });

        const emptyUnitsDay = [];
        const emptyUnitsNight = [];

        units.forEach(unit => {
            if (unit.isBreakdown) {
                const dayDriver = unit.drivers.find(d => d.dailyStatuses[dayIndex] === 'D');
                const nightDriver = unit.drivers.find(d => d.dailyStatuses[dayIndex] === 'N');
                breakdownUnitsDay.push({ unitName: unit.name, driver: dayDriver || null, shift: 'Day' });
                breakdownUnitsNight.push({ unitName: unit.name, driver: nightDriver || null, shift: 'Night' });
                return;
            }

            const isMannedDay = unit.drivers.some(d => d.dailyStatuses[dayIndex] === 'D');
            const isMannedNight = unit.drivers.some(d => d.dailyStatuses[dayIndex] === 'N');

            if (!isMannedDay) {
                emptyUnitsDay.push({ unitName: unit.name, shift: 'Day' });
            }

            if (!isMannedNight) {
                emptyUnitsNight.push({ unitName: unit.name, shift: 'Night' });
            }
        });
        
        const totalOnRooster = drivers.filter(d => d.dailyStatuses[dayIndex] === 'CR').length;
        
        const availableSparesDay = spareOnDutyDay.length;
        const availableSparesNight = spareOnDutyNight.length;

        const equipmentLabel = activeEquipment === 'dt' ? 'DT' : (activeEquipment.charAt(0).toUpperCase() + activeEquipment.slice(1));

        return {
           day: {
                onDuty: onDutyDay, 
                emptyUnits: emptyUnitsDay, 
                onRooster: onRooster.map(item => ({...item, shift: 'Day'})),
                onOff: onOff.map(item => ({...item, shift: 'Day'})),
                onInduction: onInduction.map(item => ({...item, shift: 'Day'})),
                breakdownUnits: breakdownUnitsDay,
                spareOnDuty: spareOnDutyDay,
                stats: { onDutyCount: onDutyDay.length, emptyCount: emptyUnitsDay.length, roosterCount: totalOnRooster, availableSpares: availableSparesDay, breakdownCount: breakdownUnitsDay.length, equipmentLabel }
           },
           night: {
                onDuty: onDutyNight, 
                emptyUnits: emptyUnitsNight, 
                onRooster: onRooster.map(item => ({...item, shift: 'Night'})),
                onOff: onOff.map(item => ({...item, shift: 'Night'})),
                onInduction: onInduction.map(item => ({...item, shift: 'Night'})),
                breakdownUnits: breakdownUnitsNight,
                spareOnDuty: spareOnDutyNight,
                stats: { onDutyCount: onDutyNight.length, emptyCount: emptyUnitsNight.length, roosterCount: totalOnRooster, availableSpares: availableSparesNight, breakdownCount: breakdownUnitsNight.length, equipmentLabel }
           }
        };
    }, [selectedDate, drivers, units, spareDrivers, activeEquipment]);
    
    const daysWithNotes = useMemo(() => {
        const dates = new Set();
        Object.keys(notes).forEach(key => {
            dates.add(key.substring(0, 10));
        });
        return dates;
    }, [notes]);

    const renderList = () => {
        if (!dailyData) return html`<p>Select a valid day.</p>`;

        const currentShiftData = activeShift === 'day' ? dailyData.day : dailyData.night;
        
        const dataForTab = (tabKey) => {
             switch(tabKey) {
                case 'on_duty': return currentShiftData.onDuty;
                case 'empty_units': return currentShiftData.emptyUnits;
                case 'breakdown': return currentShiftData.breakdownUnits;
                case 'rooster': return currentShiftData.onRooster;
                case 'off': return currentShiftData.onOff;
                case 'induction': return currentShiftData.onInduction;
                case 'spare_on_duty': return currentShiftData.spareOnDuty;
                default: return [];
            }
        };

        const data = dataForTab(activeDetailTab);

        const filteredData = (data || []).filter(item => {
            if (!searchQuery) return true;
            const query = searchQuery.toLowerCase();

            if (activeDetailTab === 'breakdown') {
                const unitMatch = item.unitName.toLowerCase().includes(query);
                const driverMatch = item.driver ? item.driver.name.toLowerCase().includes(query) : false;
                return unitMatch || driverMatch;
            }
            if (item.driver) {
                return item.driver.name.toLowerCase().includes(query) || 
                       item.driver.unit.toLowerCase().includes(query);
            }
            if (item.unitName) {
                return item.unitName.toLowerCase().includes(query);
            }
            return false;
        });
        
        if (!filteredData || filteredData.length === 0) {
            const message = searchQuery
                ? 'No results found for your search.'
                : 'No data available for this category.';
            return html`<div className="text-center py-10 text-slate-500 dark:text-slate-400">${message}</div>`;
        }
        
        const cardBaseClasses = "bg-white dark:bg-slate-800 rounded-lg p-3 shadow-md cursor-pointer hover:shadow-lg hover:-translate-y-1 transition-all duration-200 ease-in-out";

        return html`
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-4">
                ${filteredData.map((item, index) => {
                    if (item.driver) { // For tabs with driver info
                        const driver = item.driver;
                        const noteKey = `${selectedDate.toISOString().split('T')[0]}-${driver.id}`;
                        const hasNote = notes[noteKey];
                        return html`
                            <div key=${`${driver.id}-${index}`} onClick=${() => handleOpenModal('driver', item)} className=${cardBaseClasses}>
                                <div className="flex justify-between items-start space-x-2">
                                    <div className="flex-1 min-w-0">
                                        <p className="font-semibold text-sm text-slate-900 dark:text-slate-100 truncate" title=${driver.name}>${driver.name}</p>
                                        <p className="text-xs text-slate-500 dark:text-slate-400 truncate" title=${driver.unit}>${driver.unit}</p>
                                    </div>
                                    ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400 flex-shrink-0 mt-0.5" />`}
                                </div>
                            </div>`;
                    } else if (item.unitName) { // For tabs with unit info
                         const noteKey = `${selectedDate.toISOString().split('T')[0]}-${item.unitName}`;
                         const hasNote = notes[noteKey];
                         return html`
                            <div key=${`${item.unitName}-${index}`} onClick=${() => handleOpenModal('unit', item)} className=${cardBaseClasses}>
                                 <div className="flex justify-between items-start space-x-2">
                                    <div className="flex-1 min-w-0">
                                        <p className="font-semibold text-sm text-slate-900 dark:text-slate-100 truncate" title=${item.unitName}>${item.unitName}</p>
                                        <p className="text-xs text-slate-500 dark:text-slate-400 truncate" title=${item.driver ? item.driver.name : 'No Operator'}>
                                            ${item.driver ? item.driver.name : html`<span className="italic">No Operator</span>`}
                                        </p>
                                    </div>
                                    ${hasNote && html`<${NoteIcon} className="w-4 h-4 text-indigo-400 flex-shrink-0 mt-0.5" />`}
                                 </div>
                            </div>`;
                    }
                    return null;
                })}
            </div>
        `;
    };
    
    const equipmentTitle = useMemo(() => {
        switch(activeEquipment) {
            case 'dt': return 'Dump Truck';
            case 'excavator': return 'Excavator';
            case 'dozer': return 'Dozer';
            default: return 'Equipment';
        }
    }, [activeEquipment]);
    
    const currentShiftData = activeShift === 'day' ? dailyData?.day : dailyData?.night;
    const stats = dailyData?.day.stats; 
    const onRoosterCount = dailyData?.day.onRooster.length || 0;
    const onOffCount = dailyData?.day.onOff.length || 0;
    const onInductionCount = dailyData?.day.onInduction.length || 0;

    const detailTabs = [
        { key: 'on_duty', label: `On Duty (${currentShiftData?.onDuty?.length || 0})` },
        { key: 'empty_units', label: `${stats?.equipmentLabel || 'Unit'} Kosong (${currentShiftData?.emptyUnits?.length || 0})` },
        { key: 'breakdown', label: `Unit Breakdown (${currentShiftData?.breakdownUnits?.length || 0})` },
        { key: 'spare_on_duty', label: `Spare On Duty (${currentShiftData?.spareOnDuty?.length || 0})` },
        { key: 'rooster', label: `Cuti Rooster (${onRoosterCount})` },
        { key: 'off', label: `OFF (${onOffCount})` },
        { key: 'induction', label: `Induksi (${onInductionCount})` },
    ];
    
    const currentStats = activeShift === 'day' ? dailyData?.day.stats : dailyData?.night.stats;

    const onDutyIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth=${2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.653-.284-1.255-.758-1.685M3 12a9 9 0 0118 0v2c0 .653-.284 1.255-.758 1.685M3 12a9 9 0 0118 0-9 9 0 01-18 0z" /></svg>`;
    const emptyIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth=${2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
    const breakdownIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" /></svg>`;
    const spareIcon = html`<svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth=${2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M15 21v-1a6 6 0 00-5.176-5.97M15 21h6m-6-1a6 6 0 00-9-5.197M15 21h-6a6 6 0 00-6-6v-1a6 6 0 0112 0v1zm0 0v-1a6 6 0 00-5.176-5.97m5.176 5.97A6 6 0 0121 15v1h-6m-6-1a6 6 0 016-6v-1a6 6 0 00-9 5.197m9-5.197a4 4 0 110-5.292" /></svg>`;

    const dashboardCards = [
        { title: "On Duty", value: currentStats?.onDutyCount || 0, icon: onDutyIcon, color: "bg-teal-500" },
        { title: `${currentStats?.equipmentLabel || 'Unit'} Kosong`, value: currentStats?.emptyCount || 0, icon: emptyIcon, color: "bg-red-500" },
        { title: "Unit Breakdown", value: currentStats?.breakdownCount || 0, icon: breakdownIcon, color: "bg-orange-500" },
        { title: "Operator Spare", value: currentStats?.availableSpares || 0, icon: spareIcon, color: "bg-green-500" },
    ];

    return html`
        <div className="flex min-h-screen font-sans text-slate-800 dark:text-slate-200">
            <${Sidebar} activeEquipment=${activeEquipment} onSelectEquipment=${handleSelectEquipment} />
            <main className="flex-1 p-4 sm:p-6 lg:p-8 overflow-y-auto pb-24 lg:pb-8">
                <div className="max-w-7xl mx-auto">
                    <header className="mb-8">
                         <div className="flex justify-between items-center">
                            <h1 className="text-3xl lg:text-4xl font-bold tracking-tight text-slate-900 dark:text-white">Manpower & ${equipmentTitle} Dashboard</h1>
                        </div>
                        <p className="mt-2 text-lg text-slate-600 dark:text-slate-400">Daily operational overview for workforce and vehicle availability.</p>
                    </header>

                    <${Calendar} selectedDate=${selectedDate} setSelectedDate=${setSelectedDate} daysWithNotes=${daysWithNotes} />
                    
                    <div className="mb-8">
                        <div className="flex space-x-2 bg-slate-200 dark:bg-slate-900/50 p-1 rounded-xl">
                            <button 
                                onClick=${() => setActiveShift('day')}
                                className=${`w-full font-semibold py-3 px-4 rounded-lg transition-colors duration-200 ${activeShift === 'day' ? 'bg-white dark:bg-slate-700 text-indigo-600 dark:text-indigo-400 shadow-md' : 'text-slate-600 dark:text-slate-300 hover:bg-white/50 dark:hover:bg-slate-800/50'}`}>
                                ☀️ Day Shift
                            </button>
                            <button 
                                onClick=${() => setActiveShift('night')}
                                className=${`w-full font-semibold py-3 px-4 rounded-lg transition-colors duration-200 ${activeShift === 'night' ? 'bg-white dark:bg-slate-700 text-indigo-600 dark:text-indigo-400 shadow-md' : 'text-slate-600 dark:text-slate-300 hover:bg-white/50 dark:hover:bg-slate-800/50'}`}>
                                🌙 Night Shift
                            </button>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                        ${dashboardCards.map(card => html`
                            <${DashboardCard}
                                key=${card.title}
                                title=${card.title}
                                value=${card.value}
                                icon=${card.icon}
                                color=${card.color}
                            />
                        `)}
                    </div>

                    <div className="bg-white dark:bg-slate-800/50 rounded-2xl shadow-lg">
                        <div className="border-b border-slate-200 dark:border-slate-700">
                            <nav className="-mb-px flex space-x-4 sm:space-x-6 px-4 sm:px-6 overflow-x-auto" aria-label="Tabs">
                                ${detailTabs.map(tab => html`
                                    <button
                                        key=${tab.key}
                                        onClick=${() => setActiveDetailTab(tab.key)}
                                        className=${`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm transition-colors ${
                                            activeDetailTab === tab.key
                                                ? 'border-indigo-500 text-indigo-600 dark:border-indigo-400 dark:text-indigo-400'
                                                : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300 dark:text-slate-400 dark:hover:text-slate-200 dark:hover:border-slate-500'
                                        }`}
                                    >
                                        ${tab.label}
                                    </button>
                                `)}
                            </nav>
                        </div>
                        <div className="p-4 border-b border-slate-200 dark:border-slate-700">
                            <div className="relative">
                                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <${SearchIcon} className="h-5 w-5 text-slate-400" />
                                </div>
                                <input
                                    type="text"
                                    value=${searchQuery}
                                    onChange=${e => setSearchQuery(e.target.value)}
                                    placeholder="Search by name or unit..."
                                    className="block w-full pl-10 pr-3 py-2 border border-slate-300 rounded-md leading-5 bg-white dark:bg-slate-700 dark:border-slate-600 dark:text-white placeholder-slate-400 focus:outline-none focus:placeholder-slate-500 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                />
                            </div>
                        </div>
                        <div className="p-4">
                            ${renderList()}
                        </div>
                    </div>
                </div>
            </main>
            <${BottomNavBar} activeEquipment=${activeEquipment} onSelectEquipment=${handleSelectEquipment} />
            <${NoteModal}
                isOpen=${isModalOpen}
                onClose=${handleCloseModal}
                onSave=${handleSaveNote}
                target=${modalTarget}
                notes=${notes}
                selectedDate=${selectedDate}
            />
        </div>
    `;
};

// --- Application Entry Point ---
const rootElement = document.getElementById('root');
const root = ReactDOM.createRoot(rootElement);
root.render(html`
  <${React.StrictMode}>
    <${App} />
  </${React.StrictMode}>
`);
